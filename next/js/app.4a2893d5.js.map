{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/material/Button.vue","webpack:///./src/components/material/Button.vue?7558","webpack:///./src/components/material/Button.vue?3247","webpack:///./src/service/dia/index.ts","webpack:///./src/components/material/Button.vue?731f","webpack:///./src/service/delibird/index.ts","webpack:///./src/components/material/Snackbar.vue?f4bc","webpack:///./src/components/material/IconRaw.vue?015d","webpack:///./src/service/google/index.ts","webpack:///./src/service/google/auth/index.ts","webpack:///./src/service/google/drive/index.ts","webpack:///./src/service/mari/parser.ts","webpack:///./src/service/mari/index.ts","webpack:///./src/service/index.ts","webpack:///./src/service/utils/index.ts","webpack:///./src/components/material/IconButton.vue","webpack:///./src/components/material/IconButton.vue?e334","webpack:///./src/components/material/IconButton.vue?cfff","webpack:///./src/App.vue?d0c3","webpack:///./src/service/nomination/index.ts","webpack:///./src/service/brainstorming/index.ts","webpack:///./src/service/preferences/index.ts","webpack:///./src/components/material/Dialog.vue?751f","webpack:///./src/components/material/IconRaw.vue","webpack:///./src/components/material/IconRaw.vue?227f","webpack:///./src/components/material/IconRaw.vue?9746","webpack:///./src/App.vue","webpack:///./src/components/material/Dialog.vue","webpack:///./src/components/material/DialogAction.vue","webpack:///./src/components/material/DialogAction.vue?0d77","webpack:///./src/components/material/DialogAction.vue?4940","webpack:///./src/components/material/Dialog.vue?47ed","webpack:///./src/components/material/Dialog.vue?e8cd","webpack:///./src/components/material/Snackbar.vue","webpack:///./src/components/material/Snackbar.vue?3d66","webpack:///./src/components/material/Snackbar.vue?f66d","webpack:///./src/App.vue?1d14","webpack:///./src/App.vue?889f","webpack:///./src/locales/index.ts","webpack:///./src/router/index.ts","webpack:///./src/store/modules/google/index.ts","webpack:///./src/store/modules/dia/index.ts","webpack:///./src/store/modules/progress/index.ts","webpack:///./src/store/modules/service/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/service/umi/index.ts","webpack:///./src/components/material/IconButton.vue?5a88"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","class","className","this","outlined","raised","ctrl","attachTo","$el","unbounded","destroy","Boolean","render","dia","databaseName","databaseVersion","storeName","_store","database","init","store","indexedDB","open","onsuccess","commit","onupgradeneeded","createObjectStore","keyPath","autoIncrement","count","predicator","getStore","settled","list","getAll","filter","id","save","nomination","put","saved","saveAll","nominations","allSettled","map","remove","delete","clear","transaction","objectStore","delibird","alert","events","inform","AuthKit","authStatusChanged","navigator","onLine","gapi","load","initClient","client","apiKey","clientId","discoveryDocs","scope","join","auth2","getAuthInstance","isSignedIn","listen","signedIn","currentUser","getAuthResponse","access_token","signIn","signOut","ids","Map","filename","validator","listResponse","drive","files","q","pageSize","spaces","folder","fields","file","fileResponse","fileId","alt","solidFile","set","mimeType","blob","token","url","method","metadata","has","parents","form","FormData","append","Blob","JSON","stringify","authHeader","response","responseRaw","fetch","headers","Headers","Authorization","body","json","google","loadScript","auth","authed","ServiceStatus","parser","parse","mail","status","scanner","umi","StatusCode","Pending","confirmedTime","parseInt","internalDate","confirmationMailId","resultTime","resultMailId","header","payload","matched","replace","match","title","trim","part","parts","partId","mailBody","base64","ScannerCode","GO","matchedTitle","image","parseId","Redacted","lngLat","Rejected","reasons","reason","raw","matchedMainBody","mainBody","indexReasons","keywords","keyword","pos","search","sort","a","b","pair","lng","parseFloat","lat","text","unescape","decodeURIComponent","escape","atob","ProgressItem","total","finished","Progress","callback","lists","messages","onProgress","left","mari","start","raws","progress","ignoreIds","flatMap","queryAfter","preferences","general","queryAfterLatest","latest","Math","floor","reduce","time","max","queries","values","keys","query","addList","pageToken","gmail","users","userId","filtered","includes","nextPageToken","finishList","format","metadataHeaders","fullMail","subject","details","typedError","stack","finishMessage","service","Filename","Status","mimeJSON","i18n","addEventListener","errorEvent","errors","serviceWorker","register","brainstorming","refresh","sync","download","setProgress","setStatus","processingMails","matchTargets","reduced","merged","merge","from","Array","autoQueryFirebase","queryBrainstorming","upload","idle","updateBrainstorming","queryingBrainstorming","update","syncing","getNominationsJSONBlod","accessToken","migrate","legacy","importNominationsFile","content","importFile","importNominations","exportNominationsFile","exportFile","importWayfarerJSON","parsed","mapNomination","imageUrl","targets","pendings","packs","checkScanner","Unknown","candidates","selected","matchData","pack","candidate","requestMatch","record","catch","finally","forEach","sources","jsons","util","copy","textarea","readOnly","select","execCommand","anchor","URL","createObjectURL","hidden","click","input","accept","fileReader","FileReader","readAsText","defer","icon","String","components","MaterialIconRaw","ParseErrorReason","Nomination","MISSING_ID","MISSING_IMAGE","test","INVALID_ID","INVALID_IMAGE","Accepted","Reason","undeclared","timestampSecondBound","imgUrl","toLowerCase","comparatorByTime","timeA","timeB","FailReason","beforeCreate","EARLY","queryDatabase","queryFirebase","NOT_EXISTS","succeed","processed","getFromLocal","contains","importDatabase","size","exportDatabase","pairs","INDEXEDDB_ERROR","FIREBASE_ERROR","localStorage","setItem","def","getItem","keyQueryAfterLatest","setQueryAfterLatest","keySync","setSync","keyAutoQueryFirebase","setAutoQueryFirebase","symbol","IconSymbolMap","nameRegex","alertOpen","alertMessage","informMessage","informOpen","role","aria-modal","$t","action","as-default","data-mdc-dialog-action","data-mdc-dialog-button-default","asDefault","MaterialButton","newVal","_","$emit","isOpen","close","default","MaterialDialogAction","aria-relevant","aria-atomic","labelText","MaterialIconButton","MaterialDialog","MaterialSnackbar","en","zh","routes","path","component","router","history","googleModule","namespaced","state","loaded","mutations","diaModule","saveID","progressModule","serviceModule","locale","language","fallbackLocale","locales","global","use","mount","Scanner","color","colors","log","indexOf","scanners","item","statuses","iconFA","duplicated","version"],"mappings":"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","file":"js/app.4a2893d5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"brainstorming~charts~dashboard~details~list~map~match~preferences\":\"brainstorming~charts~dashboard~details~list~map~match~preferences\",\"brainstorming~charts\":\"brainstorming~charts\",\"brainstorming~dashboard\":\"brainstorming~dashboard\",\"brainstorming\":\"brainstorming\",\"charts\":\"charts\",\"dashboard\":\"dashboard\",\"details~map\":\"details~map\",\"details\":\"details\",\"map\":\"map\",\"list\":\"list\",\"match\":\"match\",\"preferences\":\"preferences\",\"mapbox\":\"mapbox\"}[chunkId]||chunkId) + \".\" + {\"brainstorming~charts~dashboard~details~list~map~match~preferences\":\"38ff0177\",\"brainstorming~charts\":\"9afe6635\",\"brainstorming~dashboard\":\"30e6244c\",\"brainstorming\":\"7e1c708d\",\"charts\":\"898f5ce9\",\"dashboard\":\"71d20a0a\",\"details~map\":\"085d37d2\",\"details\":\"05cd8dbd\",\"map\":\"a555fadb\",\"list\":\"b1376a3c\",\"match\":\"d9591c4e\",\"preferences\":\"922c8d92\",\"mapbox\":\"205d1ec1\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"brainstorming~charts~dashboard~details~list~map~match~preferences\":1,\"brainstorming~charts\":1,\"brainstorming~dashboard\":1,\"brainstorming\":1,\"charts\":1,\"dashboard\":1,\"details~map\":1,\"details\":1,\"map\":1,\"list\":1,\"match\":1,\"preferences\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"brainstorming~charts~dashboard~details~list~map~match~preferences\":\"brainstorming~charts~dashboard~details~list~map~match~preferences\",\"brainstorming~charts\":\"brainstorming~charts\",\"brainstorming~dashboard\":\"brainstorming~dashboard\",\"brainstorming\":\"brainstorming\",\"charts\":\"charts\",\"dashboard\":\"dashboard\",\"details~map\":\"details~map\",\"details\":\"details\",\"map\":\"map\",\"list\":\"list\",\"match\":\"match\",\"preferences\":\"preferences\",\"mapbox\":\"mapbox\"}[chunkId]||chunkId) + \".\" + {\"brainstorming~charts~dashboard~details~list~map~match~preferences\":\"e3bf8ac8\",\"brainstorming~charts\":\"5109a264\",\"brainstorming~dashboard\":\"7d15308f\",\"brainstorming\":\"2454f1eb\",\"charts\":\"a8695c17\",\"dashboard\":\"ea051903\",\"details~map\":\"649328d6\",\"details\":\"b56758cc\",\"map\":\"dc687b38\",\"list\":\"a11a204f\",\"match\":\"d5345565\",\"preferences\":\"1d61bbd0\",\"mapbox\":\"31d6cfe0\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/next/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n<button :class=\"className\">\n    <span class=\"mdc-button__ripple\"></span>\n    <span class=\"mdc-button__label\"><slot/></span>\n</button>\n</template>\n\n<script lang=\"ts\">\nimport { MDCRipple } from '@material/ripple';\nimport { Vue, Prop } from 'vue-property-decorator';\n\nexport default class MaterialButton extends Vue {\n\n    @Prop(Boolean) readonly outlined?: boolean;\n    @Prop(Boolean) readonly raised?: boolean;\n\n    private ctrl?: MDCRipple;\n\n    get className(): string {\n        let name = 'mdc-button';\n        if (this.outlined) {\n            name += ' mdc-button--outlined';\n        } else if (this.raised) {\n            name += ' mdc-button--raised';\n        }\n        return name;\n    }\n\n    mounted() {\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    updated() {\n        this.ctrl?.destroy();\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    unmounted() {\n        this.ctrl?.destroy();\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use '~@material/button/styles';\n</style>","\nimport { MDCRipple } from '@material/ripple';\nimport { Vue, Prop } from 'vue-property-decorator';\n\nexport default class MaterialButton extends Vue {\n\n    @Prop(Boolean) readonly outlined?: boolean;\n    @Prop(Boolean) readonly raised?: boolean;\n\n    private ctrl?: MDCRipple;\n\n    get className(): string {\n        let name = 'mdc-button';\n        if (this.outlined) {\n            name += ' mdc-button--outlined';\n        } else if (this.raised) {\n            name += ' mdc-button--raised';\n        }\n        return name;\n    }\n\n    mounted() {\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    updated() {\n        this.ctrl?.destroy();\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    unmounted() {\n        this.ctrl?.destroy();\n    }\n}\n","import { render } from \"./Button.vue?vue&type=template&id=79013cda\"\nimport script from \"./Button.vue?vue&type=script&lang=ts\"\nexport * from \"./Button.vue?vue&type=script&lang=ts\"\n\nimport \"./Button.vue?vue&type=style&index=0&id=79013cda&lang=scss\"\nscript.render = render\n\nexport default script","import { Store } from 'vuex';\nimport { State } from '@/store/state';\n\nimport { NominationRAW, Predicator } from '@/service/nomination';\n\nexport namespace dia {\n\n    const databaseName = 'potori';\n    const databaseVersion = 1;\n    const storeName = 'nomination';\n\n    let _store: Store<State>;\n    let database: IDBDatabase | undefined = undefined;\n\n    export function init(store: Store<State>) {\n        _store = store;\n        const request = window.indexedDB.open(databaseName, databaseVersion);\n        return new Promise<boolean>((resolve, reject) => {\n            request.onsuccess = () => {\n                database = request.result;\n                _store.commit('dia/saved');\n                resolve(true);\n            };\n            request.onerror = () => reject(request.error);\n            request.onupgradeneeded = () => {\n                request.result.createObjectStore(storeName, {\n                    keyPath: 'id', autoIncrement: false\n                });\n            };\n        });\n    }\n\n    export async function count(predicator?: Predicator): Promise<number> {\n        const store = getStore('readonly');\n        if (!store) return 0;\n        if (!predicator) return await settled(store.count()) ?? 0;\n        const list = await settled(store.getAll());\n        if (!list) return 0;\n        return list.filter(predicator).length;\n    }\n\n    export async function get(id: string): Promise<NominationRAW | undefined> {\n        const store = getStore('readonly');\n        if (!store) return;\n        return await settled(store.get(id));\n    }\n\n    export async function getAll(predicator?: Predicator): Promise<Array<NominationRAW>> {\n        const store = getStore('readonly');\n        if (!store) return [];\n        let list = await settled(store.getAll()) ?? [];\n        if (predicator) list = list.filter(predicator);\n        return list;\n    }\n\n    export async function save(nomination: NominationRAW) {\n        const store = getStore('readwrite');\n        if (!store) return;\n        const result = await settled(store.put(nomination));\n        if (typeof result !== 'undefined') saved();\n    }\n\n    export async function saveAll(nominations: Array<NominationRAW>) {\n        await Promise.allSettled(nominations.map(nomination => save(nomination)));\n        saved();\n    }\n\n    export async function remove(id: string) {\n        const store = getStore('readwrite');\n        if (!store) return;\n        await settled(store.delete(id));\n        saved();\n    }\n\n    export async function clear() {\n        const store = getStore('readwrite');\n        if (!store) return;\n        await settled(store.clear());\n        saved();\n    }\n\n    function getStore(mode: IDBTransactionMode): IDBObjectStore | undefined {\n        if (!database) return;\n        return database.transaction([ storeName ], mode).objectStore(storeName);\n    }\n\n    function settled<T>(request: IDBRequest<T>) {\n        return new Promise<T | undefined>((resolve) => {\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => resolve(undefined);\n        });\n    }\n\n    function saved() {\n        _store.commit('dia/saved');\n    }\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Button.vue?vue&type=style&index=0&id=79013cda&lang=scss\"","import { MessageCallback } from '@/service/types';\n\nexport namespace delibird {\n    interface Events {\n        alert   : MessageCallback,  // Triggered when alert raised\n        inform  : MessageCallback,  // Triggered when some information should be passed to user\n    }\n\n    export const events: Events = {\n        alert   : () => { },\n        inform  : () => { },\n    }\n\n    export function alert(message: string) {\n        events.alert(message);\n    }\n\n    export function inform(message: string) {\n        events.inform(message);\n    }\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Snackbar.vue?vue&type=style&index=0&id=12cf8ebd&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./IconRaw.vue?vue&type=style&index=0&id=cd6e7afa&lang=scss\"","import { Store } from 'vuex'\n\nimport type { State } from '@/store/state';\nimport { util } from '@/service/utils';\nimport AuthKit from './auth';\nimport GoogleDriveKit from './drive';\n\nexport namespace google {\n\n    export const auth = new AuthKit();\n    export const drive = new GoogleDriveKit();\n\n    export async function init(store: Store<State>) {\n        await util.loadScript('https://apis.google.com/js/api.js');\n        auth.events.authStatusChanged = (authed) => {\n            store.commit('google/setAuthed', authed);\n            store.commit('google/loaded');\n        };\n        auth.init();\n    }\n}","export type AuthStatusChangedCallback = (signedIn: boolean) => void;\ntype ErrorCallback = (message: string) => void;\n\n/**\n * Events for {@link AuthKit}\n */\ninterface AuthKitEvents {\n    authStatusChanged: AuthStatusChangedCallback;   // Triggered when sign-in or sign-out\n    error: ErrorCallback;   // Triggered when gapi.auth error occures\n}\n\n/**\n * Handle GAPI authentication\n */\nexport default class AuthKit {\n\n    events: AuthKitEvents = {\n        authStatusChanged: () => { },\n        error: () => { },\n    };\n\n    init() {\n        if (navigator.onLine) {\n            gapi.load('client:auth2', () => this.initClient());\n        }\n    }\n\n    /**\n     * Initialize the GAPI and load client libraries\n     */\n    private initClient() {\n        gapi.client.init({\n            apiKey: 'AIzaSyCqIaS8UizqjWrIKm5zV3_S8EffCWjKR-A',\n            clientId: '361295761775-qshg0f5buh495dhubp4v5bignk7i5dh1.apps.googleusercontent.com',\n            discoveryDocs: [\n                'https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest',\n                'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\n            ],\n            scope: [\n                'https://www.googleapis.com/auth/gmail.readonly',\n                'https://www.googleapis.com/auth/drive.file',\n                'https://www.googleapis.com/auth/drive.appdata'\n            ].join(' '),\n        }).then(\n            () => {\n                // Listen for sign-in state changes.\n                gapi.auth2.getAuthInstance().isSignedIn.listen(this.events.authStatusChanged);\n                // Handle the initial sign-in state.\n                this.events.authStatusChanged(this.signedIn);\n            },\n            this.events.error\n        );\n    }\n\n    /**\n     * Get authentication status, signed in or not\n     */\n    get signedIn() {\n        return navigator.onLine && gapi.auth2.getAuthInstance().isSignedIn.get();\n    }\n\n    /**\n     * Get the token for accessing the account\n     */\n    get accessToken() {\n        return gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token;\n    }\n\n    /**\n     * Sign in\n     */\n    signIn() {\n        gapi.auth2.getAuthInstance().signIn();\n    }\n\n    /**\n     * Sign out\n     */\n    signOut() {\n        gapi.auth2.getAuthInstance().signOut();\n    }\n}","type FileValidator = (file: gapi.client.drive.File) => boolean;\n\n/**\n * Download and upload from / to Google Drive\n */\nexport default class GoogleDriveKit {\n\n    private static readonly folder = 'appDataFolder';   // The private folder in Google Drive\n\n    private ids: Map<string, string> = new Map();   // ID of files, <filename, id>\n\n    /**\n     * Download file from Google Drive.\n     * \n     * The caller should decide whether to delete the current one & download\n     * next one or not by return a boolean\n     * \n     * @param filename Name of the file to download\n     * @param validator Triggered when a file is downloaded\n     */\n    async download(filename: string, validator: FileValidator) {\n        const listResponse = await gapi.client.drive.files.list({\n            q: `name = '${filename}'`,\n            pageSize: 10,\n            spaces: GoogleDriveKit.folder,\n            fields: 'files(id)'\n        });\n        if (!listResponse.result.files) return undefined;\n        const list = listResponse.result.files;\n        for (const file of list) {\n            if (!file.id) continue;\n            const fileResponse = await gapi.client.drive.files.get({\n                fileId: file.id,\n                alt: 'media'\n            });\n            const solidFile = fileResponse.result;\n            if (validator(solidFile)) {\n                this.ids.set(filename, file.id);\n                return solidFile;\n            }\n            gapi.client.drive.files.delete({ fileId: file.id })\n        }\n    }\n\n    /**\n     * Upload file to Google Drive\n     * @param filename Filename to upload\n     * @param mimeType MIME type of the file\n     * @param blob Content to upload\n     * @param token The Google account access token\n     * @param callback Triggered when process finished\n     */\n    async upload(filename: string, mimeType: string, blob: Blob, token: string) {\n        // Ref: https://gist.github.com/tanaikech/bd53b366aedef70e35a35f449c51eced\n        let url = '';\n        let method = '';\n        const metadata: any = {\n            name: filename,\n            mimeType: mimeType,\n        };\n        // Using parent in Update will cause 403\n        if (this.ids.has(filename)) {\n            method = 'PATCH';\n            url = `https://www.googleapis.com/upload/drive/v3/files/${this.ids.get(filename)}?uploadType=multipart`;\n        } else {\n            method = 'POST';\n            url = 'https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart';\n            metadata.parents = [ GoogleDriveKit.folder ];\n        }\n        const form = new FormData();\n        form.append('metadata', new Blob([JSON.stringify(metadata)], { type: mimeType }));\n        form.append('file', blob);\n        const authHeader = `Bearer ${token}`;\n        let response: any | undefined;\n        try {\n            const responseRaw = await fetch(url, {\n                method: method,\n                headers: new Headers({ Authorization: authHeader }),\n                body: form,\n            });\n            response = await responseRaw.json();\n        } catch {\n            return false;\n        }\n        if (!response || typeof response.id !== 'string') return false;\n        this.ids.set(filename, response.id);\n        return true;\n    }\n}","import { umi } from '@/service/umi';\nimport Nomination, { NominationRAW, LngLat } from '@/service/nomination';\n\n/**\n * Parsers for mail content\n */\nexport namespace parser {\n    /**\n     * Parse the full mail to nomination\n     * @param mail The full mail to parse\n     * @param status Statue of the mail\n     * @param scanner Scanner of the mail\n     * @returns The parsed nomination\n     */\n    export function parse(\n        mail: gapi.client.gmail.Message,\n        status: umi.StatusCode,\n        scanner: umi.ScannerCode\n    ): NominationRAW {\n        const nomination = new Nomination();\n        nomination.status = status;\n        nomination.scanner = scanner;\n        if (status === umi.StatusCode.Pending) {\n            nomination.confirmedTime = parseInt(mail.internalDate!);\n            nomination.confirmationMailId = mail.id!;\n        } else {\n            nomination.resultTime = parseInt(mail.internalDate!);\n            nomination.resultMailId = mail.id!;\n        }\n\n        // Subject -> Title\n        for (const header of mail.payload!.headers!) {\n            if (header.name !== 'Subject') continue;\n            const matched = header.value!\n                .replace(/^Trainer .+?:/, '')\n                .match(/[:：](.+)/);\n            if (matched && matched.length > 1) {\n                nomination.title = matched[1].trim();\n            }\n            break;\n        }\n\n        // Body -> image, id, lngLat and reason\n        for (const part of mail.payload!.parts!) {\n            if (part.partId !== '1') continue;\n            const mailBody = base64(part.body!.data!);\n            // Title\n            if (scanner === umi.ScannerCode.GO && nomination.title.length === 0) {\n                const matchedTitle = mailBody.match(/\\– (?:The )?Pokémon GO.+(?:\\n|\\r|<\\/p>| )+<p>(.+?)<\\/p>(?:\\n|\\r)/);\n                if (matchedTitle && matchedTitle.length > 1) {\n                    nomination.title = matchedTitle[1];\n                }\n            }\n            const matched = mailBody.match(/(?:googleusercontent|ggpht)\\.com\\/([0-9a-zA-Z\\-\\_]+)/);\n            if (matched && matched.length > 1) {\n                nomination.image = matched[1];\n                nomination.id = Nomination.parseId(nomination.image);\n            }\n            if (scanner === umi.ScannerCode.Redacted && status !== umi.StatusCode.Pending) {\n                nomination.lngLat = lngLat(mailBody);\n            }\n            if (status === umi.StatusCode.Rejected) {\n                nomination.status = umi.StatusCode.Rejected;\n                nomination.reasons = reason(mailBody, scanner);\n            }\n            break;\n        }\n        return nomination.raw;\n    }\n\n    /**\n     * Parse the reject reason from mail body\n     * @param mail Body (content) of the mail\n     * @param scanner The scanner key for fetch the keywords\n     */\n    function reason(mail: string, scanner: umi.ScannerCode): Array<umi.ReasonCode> {\n        const matchedMainBody = mail.match(/^(\\n|\\r|.)+?\\-(NianticOps| Pokémon GO)/);\n        if (!matchedMainBody || matchedMainBody.length < 1) {\n            return [ ];\n        }\n        const mainBody = matchedMainBody[0];\n\n        const indexReasons: Array<[number, umi.ReasonCode]> = []\n        for (const [code, reason] of umi.reason) {\n            const keywords = reason.keywords.get(scanner);\n            if (!keywords) continue;\n            for (const keyword of keywords) {\n                const pos = mainBody.search(keyword);\n                if (pos < 0) continue;\n                indexReasons.push([pos, code]);\n                break;\n            }\n        }\n        return indexReasons\n            .sort((a, b) => a[0] > b[0] ? 1 : -1)\n            .map((pair) => pair[1]);\n    }\n\n    /**\n     * Parse the location from mail body, only redacted mails contain location\n     * @param mail Body (content) of the mail\n     */\n    function lngLat(mail: string): LngLat | undefined {\n        const matched = mail.match(/www\\.ingress\\.com\\/intel\\?ll\\=([\\.\\d]+),([\\.\\d]+)/);\n        if (!matched || matched.length < 3) {\n            return undefined;\n        }\n        return {\n            lng: parseFloat(matched[2]),\n            lat: parseFloat(matched[1])\n        };\n    }\n\n    /**\n     * Decode base64\n     * @param text Base64 encoded text\n     * @see https://nelluil.postach.io/post/btoa-atob-zhi-yuan-zhong-wen-de-fang-fa\n     * @see https://cnodejs.org/topic/4fd6b7ba839e1e581407aac8\n     */\n    function base64(text: string) {\n        return unescape(\n            decodeURIComponent(\n                escape(window.atob(text.replace(/\\-/g, '+').replace(/\\_/g, '/')))\n            )\n        );\n    }\n}","import { delibird } from '@/service/delibird';\nimport { preferences } from '@/service/preferences';\nimport { umi } from '@/service/umi';\nimport { NominationRAW } from '@/service/nomination';\nimport { ProgressCallback } from '@/service/types';\n\nimport { parser } from './parser';\n\n/**\n * Item of {@link Progress}\n */\nclass ProgressItem {\n    total: number = 0;\n    finished: number = 0;\n\n    clear() {\n        this.total = 0;\n        this.finished = 0;\n    }\n\n    /**\n     * Detect if the progress is not 100%\n     */\n    get left() {\n        return this.finished < this.total;\n    }\n}\n\n/**\n * Manage the progress of mail processing\n */\nclass Progress {\n\n    lists = new ProgressItem();\n    messages = new ProgressItem();\n\n    onProgress  : ProgressCallback  = () => { };    // Triggered when a message finished if all lists are finished\n\n    constructor(callback: ProgressCallback) {\n        this.onProgress = callback;\n    }\n\n    /**\n     * Add a WIP list\n     */\n    addList() {\n        this.lists.total += 1;\n        this.onProgress(0, this.lists.total);\n    }\n\n    /**\n     * Finish a list and check finish\n     * @param messages Count of the messages to process\n     */\n    finishList(messages: number) {\n        this.lists.finished += 1;\n        this.messages.total += messages;\n        this.onProgress(this.lists.finished, this.lists.total);\n    }\n\n    /**\n     * Finish a message and check finish\n     */\n    finishMessage() {\n        this.messages.finished += 1;\n        if (!this.lists.left) {\n            this.onProgress(this.messages.finished, this.messages.total);\n        }\n    }\n}\n\n/**\n * Query and process mails\n */\nexport namespace mari {\n\n    /**\n     * Start the process\n     * @param nominations Existing nominations\n     */\n    export async function start(raws: Array<NominationRAW>, onProgress: ProgressCallback) {\n        const progress = new Progress(onProgress);\n\n        // Ignore the mails already in the list\n        const ignoreIds = raws.flatMap(nomination => {\n            return nomination.resultMailId.length > 0 \n                ? [ nomination.confirmationMailId, nomination.resultMailId ] : [ nomination.confirmationMailId ];\n        });\n        let queryAfter = '';\n        if (preferences.general.queryAfterLatest()) {\n            const latest = Math.floor(raws.reduce((time, nomination) => {\n                return Math.max(time, nomination.confirmedTime, nomination.resultTime)\n            }, 0) / 1000);\n            queryAfter = ` after:${latest}`;\n        }\n        const queries: Array<Promise<void>> = [];\n        for (const status of umi.status.values()) {\n            for (const scanner of status.queries.keys()) {\n                queries.push(query(raws, progress, status, scanner, queryAfter, ignoreIds));\n            }\n        }\n        await Promise.allSettled(queries);\n        return;\n    }\n\n    /**\n     * Start to query message list\n     * @param raws Nomination list to fill\n     * @param progress Progress manager\n     * @param status Status to query\n     * @param scanner Scanner to query\n     */\n    async function query(\n        raws: Array<NominationRAW>, progress: Progress,\n        status: umi.Status, scanner: umi.ScannerCode,\n        queryAfter: string,  ignoreIds: Array<string>\n    ) {\n        progress.addList();\n        // Query ID list\n        const ids: Array<string> = [];\n        let pageToken: string | undefined = undefined;\n        do {\n            type ListResponse = gapi.client.Response<gapi.client.gmail.ListMessagesResponse>;\n            const response: ListResponse = await gapi.client.gmail.users.messages.list({\n                userId: 'me',\n                q: `${status.queries.get(scanner)!}${queryAfter}`,\n                pageToken: pageToken\n            });\n            if (!response) break;\n            if (response.result.messages) {\n                const filtered = response.result.messages.filter(message => {\n                    if (!message.id) return false;\n                    return !ignoreIds.includes(message.id);\n                }).map(message => message.id!);\n                ids.push(...filtered);\n            }\n            pageToken = response.result.nextPageToken;\n        } while (pageToken);\n        progress.finishList(ids.length);\n        // Query and parse mails\n        for (const id of ids) {\n            const response = await gapi.client.gmail.users.messages.get({\n                userId: 'me',\n                id: id,\n                format: 'full',\n                metadataHeaders: 'Subject'\n            });\n            if (!response) continue;\n            const fullMail = response.result;\n            try {\n                raws.push(parser.parse(fullMail, status.code, scanner));\n            } catch (error) {\n                let subject = '';\n                for (const header of fullMail.payload!.headers!) {\n                    if (header.name === 'Subject') {\n                        subject = header.value!;\n                        break;\n                    }\n                }\n                let details: string = error;\n                if ('message' in error) {\n                    const typedError = error as Error;\n                    details = typedError.stack || typedError.message;\n                }\n                delibird.alert(`An error occurs when parsing mail, you may report the mail ${subject}  with this message to developers: [${status}:${scanner}]${details}`);\n            }\n            progress.finishMessage();\n        }\n        return;\n    }\n}","import type { VueI18n } from 'vue-i18n';\nimport { Store } from 'vuex'\n\nimport type { State } from '@/store/state';\nimport { brainstorming } from './brainstorming';\nimport { dia } from './dia';\nimport { google } from './google';\nimport { mari } from './mari';\nimport { preferences } from './preferences';\nimport { umi } from './umi';\nimport { util } from './utils';\nimport { CountCallback } from './types';\nimport Nomination, { NominationRAW, NominationJSON } from './nomination';\n\nexport enum ServiceStatus {\n    idle,\n    processingMails,\n    requestMatch,\n    queryingBrainstorming,\n    syncing\n}\n\nexport namespace service {\n\n    export import Status = ServiceStatus;\n\n    enum Filename {\n        nominations = 'nominations.json',\n        legacy = 'potori.json'\n    }\n\n    export interface MatchPack {\n        target: NominationRAW;\n        candidates: Array<Nomination>;\n        selected: string;\n    }\n\n    export interface MatchData {\n        packs: Array<MatchPack>;\n        callback: () => void;\n    }\n\n    const mimeJSON = 'application/json';\n\n    let _store: Store<State>;\n\n    export const matchData: MatchData = {\n        packs: [],\n        callback: () => { }\n    };\n\n    export const errors: Array<ErrorEvent> = [];\n\n    export function init(store: Store<State>, i18n: VueI18n<unknown, unknown, unknown>) {\n        _store = store;\n\n        window.addEventListener('error', errorEvent => errors.push(errorEvent));\n        if ('serviceWorker' in navigator) {\n            window.addEventListener('load', () => navigator.serviceWorker.register('./service-worker.js'));\n        }\n\n        dia.init(_store);\n        brainstorming.init();\n        umi.init(i18n);\n        google.init(_store);\n    }\n\n    export function signIn() {\n        google.auth.signIn();\n    }\n\n    export function signOut() {\n        google.auth.signOut();\n    }\n\n    export async function refresh() {\n        if (preferences.google.sync()) await download(Filename.nominations);\n        setProgress(0, 0);\n        setStatus(Status.processingMails);\n        const raws = await dia.getAll();\n        await mari.start(raws, setProgress);\n        const matchTargets: Array<NominationRAW> = [];\n        const reduced = raws.reduce((list, raw) => {\n            if (raw.id.length < 1) {\n                matchTargets.push(raw);\n                return list;\n            }\n            // Merge\n            let merged = false;\n\n            for (const target of list) {\n                if (target.merge(raw)) {\n                    merged = true;\n                    break;\n                }\n            }\n            if (!merged) {\n                list.push(Nomination.from(raw));\n            }\n            return list;\n        }, new Array<Nomination>());\n        if (matchTargets.length > 0) {\n            await match(matchTargets, reduced);\n        }\n        if (preferences.brainstorming.autoQueryFirebase()) {\n            await queryBrainstorming(reduced);\n        }\n        if (preferences.google.sync()) {\n            await upload();\n        }\n        await dia.saveAll(reduced);\n        setStatus(Status.idle);\n    }\n\n    export async function updateBrainstorming() {\n        setProgress(0, 0);\n        setStatus(Status.queryingBrainstorming);\n        const count = await brainstorming.update(await dia.getAll(), (progress, max) => {\n            setProgress(progress, max);\n        });\n        setStatus(Status.idle);\n        return count;\n    }\n\n    export async function sync() {\n        await download(Filename.nominations);\n        await upload();\n    }\n\n    export async function upload() {\n        setStatus(Status.syncing);\n        const blob = await getNominationsJSONBlod();\n        await google.drive.upload(Filename.nominations, mimeJSON, blob, google.auth.accessToken);\n        setStatus(Status.idle);\n    }\n\n    export function migrate(callback: CountCallback) {\n        download(Filename.legacy).then(count => {\n            setStatus(Status.idle);\n            callback(count);\n        })\n    }\n\n    export async function importNominationsFile(): Promise<number> {\n        const content = await util.importFile();\n        try {\n            const list = JSON.parse(content) as Array<NominationRAW>;\n            const count = await importNominations(list);\n            return count;\n        } catch (error) {\n            return 0;\n        }\n    }\n\n    export async function exportNominationsFile() {\n        const blob = await getNominationsJSONBlod();\n        util.exportFile(Filename.nominations, blob);\n    }\n\n    /**\n     * Import JSON from Wayfarer API response\n     * \n     * Error codes\n     * - `-1` Parse error\n     * - `-2` Invalid data\n     * @param json Raw JSON\n     * @returns Count of updated nominations or error code\n     */\n    export async function importWayfarerJSON(json: string): Promise<number> {\n        let parsed;\n        try {\n            parsed = JSON.parse(json);\n        } catch (error) {\n            // Parse error\n            return -1;\n        }\n        if (!parsed.result || parsed.result.length < 1) {\n            // Invalid data\n            return -2;\n        }\n\n        const nominations = await dia.getAll();\n        const mapNomination = nominations.reduce((map, nomination) => {\n            map.set(nomination.id, nomination);\n            return map;\n        }, new Map<string, NominationRAW>());\n        \n        let count = 0;\n        for (const data of parsed.result) {\n            const id = Nomination.parseId(data.imageUrl);\n            const nomination = mapNomination.get(id);\n            if (!nomination) continue;\n            nomination.title = data.title;\n            nomination.lngLat = {\n                lng: parseFloat(data.lng),\n                lat: parseFloat(data.lat)\n            };\n            count += 1;\n        }\n        await dia.saveAll(nominations);\n        return count;\n    }\n\n    /**\n     * Some result mails don't contain image URL, should match from pending nominations manually.\n     * @param targets Nominations without image\n     * @param list Normal nominations\n     */\n    async function match(targets: Array<NominationRAW>, list: Array<Nomination>) {\n        const pendings = list.filter(umi.status.get(umi.StatusCode.Pending)!.predicator);\n        const packs: Array<MatchPack> = [];\n        for (const target of targets) {\n            const checkScanner = target.scanner !== umi.ScannerCode.Unknown;\n            const candidates = pendings.filter((nomination) => {\n                if (nomination.title !== target.title) return false;\n                if (nomination.confirmedTime >= target.resultTime) return false;\n                if (checkScanner && nomination.scanner !== umi.ScannerCode.Unknown && nomination.scanner !== nomination.scanner) return false;\n                return true;\n            });\n            if (candidates.length < 1) continue;\n            packs.push({ target: target, candidates: candidates, selected: '' });\n        }\n        return new Promise<void>((resolve) => {\n            if (packs.length < 1) {\n                resolve();\n                return;\n            }\n            matchData.packs = packs;\n            matchData.callback = () => {\n                matchData.callback = () => { };\n                for (const pack of matchData.packs) {\n                    if (pack.selected.length < 1) continue;\n                    for (const candidate of pack.candidates) {\n                        if (candidate.id !== pack.selected) continue;\n                        pack.target.image = candidate.image;\n                        pack.target.id = candidate.id;\n                        break;\n                    }\n                    if (pack.target.id.length < 1) continue;\n                    for (const nomination of list) {\n                        nomination.merge(pack.target);\n                    }\n                }\n                matchData.packs = [];\n                resolve();\n            };\n            setStatus(Status.requestMatch);\n        });\n    }\n\n    async function queryBrainstorming(list: Array<Nomination>) {\n        setStatus(Status.queryingBrainstorming);\n        let count = 0;\n        const queries: Array<Promise<void>> = [];\n        for (const nomination of list) {\n            if (nomination.lngLat) {\n                count++;\n                setProgress(count, list.length);\n                continue;\n            }\n            const query = brainstorming.query(nomination)\n                .then(record => {\n                    nomination.lngLat = { lng: parseFloat(record.lng), lat: parseFloat(record.lat) };\n                })\n                .catch()\n                .finally(() => {\n                    count++;\n                    setProgress(count, list.length);\n                });\n            queries.push(query);\n        }\n        await Promise.allSettled(queries);\n    }\n\n    function setStatus(status: Status) {\n        _store.commit('service/setStatus', status);\n    }\n\n    function setProgress(progress: number, max: number) {\n        _store.commit('progress/setMax', max);\n        _store.commit('progress/setProgress', progress);\n    }\n\n    async function download(filename: Filename) {\n        setStatus(Status.syncing);\n        const file = await google.drive.download(filename, content => {\n            try {\n                const list = content as Array<NominationJSON>;\n                list.forEach(data => Nomination.from(data));\n            } catch {\n                return false;\n            }\n            return true;\n        });\n        if (!file) return 0;\n        return await importNominations(file as Array<NominationJSON>);\n    }\n\n    async function importNominations(list: Array<NominationJSON>): Promise<number> {\n        let count = 0;\n        try {\n            const sources = list.map(data => Nomination.from(data));\n            const raws = await dia.getAll();\n            const nominations = raws.map(raw => Nomination.from(raw));\n            for (const nomination of sources) {\n                let merged = false;\n                for (const target of nominations) {\n                    merged = target.merge(nomination);\n                    if (merged) {\n                        count += 1;\n                        break;\n                    }\n                }\n                if (merged) continue;\n                nominations.push(nomination);\n            }\n            await dia.saveAll(nominations.map(nomination => nomination.raw));\n        } catch (error) {\n            count = 0;\n        }\n        return count;\n    }\n\n    async function getNominationsJSONBlod(): Promise<Blob> {\n        const raws = await dia.getAll();\n        const jsons = raws.map(raws => Nomination.from(raws).json);\n        return new Blob(\n            [ JSON.stringify(jsons, null, 4) ],\n            { type: mimeJSON }\n        )\n    }\n}","import { eli } from \"@lucka-labs/eli\";\n\nexport namespace util {\n\n    export function copy(text: string) {\n        const textarea = eli('textarea', { value: text, readOnly: true });\n        document.body.append(textarea);\n        textarea.select();\n        document.execCommand('copy');\n        textarea.remove();\n    }\n\n    export function exportFile(filename: string, blob: Blob) {\n        const anchor = eli('a', {\n            href: URL.createObjectURL(blob),\n            download: filename,\n            hidden: true\n        });\n        document.body.append(anchor);\n        anchor.click();\n        anchor.remove();\n    }\n\n    export async function importFile() {\n        const input = eli('input', {\n            type: 'file',\n            accept: 'json',\n            hidden: true\n        });\n        return new Promise<string>(resolve => {\n            input.addEventListener('change', () => {\n                setTimeout(() => {\n                    input.remove();\n                }, 1000);\n                if (!input.files || input.files.length < 1) return;\n                const file = input.files[0];\n                const fileReader = new FileReader();\n                fileReader.onload = () => {\n                    if (typeof fileReader.result !== 'string') return;\n                    resolve(fileReader.result);\n                };\n                fileReader.readAsText(file);\n            }, false);\n            document.body.append(input);\n            input.click();\n        });\n    }\n\n    export async function loadScript(url: string) {\n        const script = eli('script', { src: url, defer: true });\n        return new Promise<void>(resolve => {\n            script.onload = () => {\n                resolve();\n            };\n            document.head.append(script);\n        });\n    }\n}","<template>\n<button class=\"fa mdc-icon-button\">\n    <material-icon-raw :icon=\"icon\"/>\n</button>\n</template>\n\n<script lang=\"ts\">\nimport { MDCRipple } from '@material/ripple';\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialIconRaw from './IconRaw.vue';\n\n@Options({\n    components: {\n        MaterialIconRaw\n    },\n})\nexport default class MaterialTopAppBar extends Vue {\n\n    @Prop(String) readonly icon!: string;\n\n    private ctrl?: MDCRipple;\n\n    mounted() {\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    updated() {\n        this.ctrl?.destroy();\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    unmounted() {\n        this.ctrl?.destroy();\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use '~@material/icon-button';\n\n@include icon-button.core-styles;\n</style>","\nimport { MDCRipple } from '@material/ripple';\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialIconRaw from './IconRaw.vue';\n\n@Options({\n    components: {\n        MaterialIconRaw\n    },\n})\nexport default class MaterialTopAppBar extends Vue {\n\n    @Prop(String) readonly icon!: string;\n\n    private ctrl?: MDCRipple;\n\n    mounted() {\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    updated() {\n        this.ctrl?.destroy();\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    unmounted() {\n        this.ctrl?.destroy();\n    }\n}\n","import { render } from \"./IconButton.vue?vue&type=template&id=0b15f13c\"\nimport script from \"./IconButton.vue?vue&type=script&lang=ts\"\nexport * from \"./IconButton.vue?vue&type=script&lang=ts\"\n\nimport \"./IconButton.vue?vue&type=style&index=0&id=0b15f13c&lang=scss\"\nscript.render = render\n\nexport default script","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=68ba03c6&lang=scss\"","import { umi } from '@/service/umi';\n\nenum ParseErrorReason {\n    MISSING_ID = 'MISSING_ID',\n    MISSING_TITLE = 'MISSING_TITLE',\n    MISSING_IMAGE = 'MISSING_IMAGE',\n\n    INVALID_ID = 'INVALID_ID',\n    INVALID_IMAGE = 'INVALID_IMAGE'\n}\n\n/**\n * Location\n */\nexport interface LngLat {\n    lng: number;    // Longitude\n    lat: number;    // Latitude\n}\n\nexport interface NominationJSON {\n    id: string;     // Short ID, also brainstorming ID\n    title: string;  // Title\n    image: string;  // Hash part of the image URL\n    scanner: umi.ScannerCode;   // Scanner of the nomination\n\n    status: umi.StatusCode; // Status code\n    reasons?: Array<umi.ReasonCode>; // Reason codes\n\n    confirmedTime: number;  // Confirmed time, the timestamp of confirmation mail\n    confirmationMailId: string; // ID of confirmation mail\n    resultTime?: number; // Result time, the timestamp of result mail\n    resultMailId?: string;   // ID of result mail\n\n    lngLat?: LngLat;    // Location\n}\n\nexport interface NominationRAW extends NominationJSON {\n    reasons: Array<umi.ReasonCode>;\n    resultTime: number;\n    resultMailId: string;\n}\n\n/**\n * Nomination data\n */\nexport default class Nomination implements NominationRAW {\n\n    private static timestampSecondBound = 1E12;\n\n    /**\n     * Comparator for sorting by time\n     */\n    static readonly comparatorByTime = (a: NominationRAW, b: NominationRAW) => {\n        const timeA = a.resultTime ? a.resultTime : a.confirmedTime;\n        const timeB = b.resultTime ? b.resultTime : b.confirmedTime;\n        return timeA < timeB ? 1 : -1;\n    };\n\n    id = '';\n    title = '';\n    image = '';\n    scanner: umi.ScannerCode = umi.ScannerCode.Unknown;\n\n    status: umi.StatusCode = umi.StatusCode.Pending;\n    reasons: Array<umi.ReasonCode> = [];\n\n    confirmedTime = 0;\n    confirmationMailId = '';\n    resultTime = 0;\n    resultMailId = '';\n\n    lngLat?: LngLat = undefined;\n\n    /**\n     * Get the image URL\n     */\n    get imageUrl(): string {\n        return `https://lh4.googleusercontent.com/${this.image}`;\n    }\n\n    /**\n     * Get Intel Maps URL\n     */\n    get intelUrl(): string {\n        if (this.lngLat) {\n            return `https://intel.ingress.com/intel?ll=${this.lngLat.lat},${this.lngLat.lng}&z=18`;\n        } else {\n            return 'https://intel.ingress.com/intel';\n        }\n    }\n\n    /**\n     * Get Brainstorming watermeter URL\n     */\n    get bsUrl(): string {\n        return `https://brainstorming.azurewebsites.net/watermeter.html#${this.id}`;\n    }\n\n    get scannerData(): umi.Scanner {\n        return umi.scanner.get(this.scanner)!;\n    }\n\n    /**\n     * Get status data\n     */\n    get statusData(): umi.Status {\n        return umi.status.get(this.status)!;\n    }\n\n    /**\n     * Get data of reasons\n     */\n    get reasonsData(): Array<umi.Reason> {\n        return this.reasons.map((code) => {\n            return umi.reason.get(code)!;\n        });\n    }\n\n    /**\n     * Get the time of quota being restored\n     */\n    get restoreTime(): number {\n        return this.confirmedTime + (14 * 24 * 3600 * 1000);\n    }\n\n    get raw(): NominationRAW {\n        let raw: NominationRAW = {\n            id: this.id,\n            title: this.title,\n            image: this.image,\n            scanner: this.scanner,\n            status: this.status,\n            reasons: this.reasons,\n            confirmedTime: this.confirmedTime,\n            confirmationMailId: this.confirmationMailId,\n            resultTime: this.resultTime,\n            resultMailId: this.resultMailId\n        };\n        if (this.lngLat) {\n            raw.lngLat = {\n                lng: this.lngLat.lng,\n                lat: this.lngLat.lat\n            };\n        }\n        return raw;\n    }\n\n    /**\n     * Serialize to JSON\n     */\n    get json(): NominationJSON {\n        let json: NominationJSON = {\n            id: this.id,\n            title: this.title,\n            image: this.image,\n            scanner: this.scanner,\n            status: this.status,\n            confirmedTime: this.confirmedTime / 1000,\n            confirmationMailId: this.confirmationMailId,\n        };\n        if (this.reasons.length > 0) {\n            json.reasons = this.reasons;\n        }\n        if (this.resultTime) json.resultTime = this.resultTime / 1000;\n        if (this.resultMailId) json.resultMailId = this.resultMailId;\n        if (this.lngLat) {\n            json.lngLat = {\n                lng: this.lngLat.lng,\n                lat: this.lngLat.lat\n            };\n        }\n        return json;\n    }\n\n    /**\n     * Merge from another nomination\n     * @param raw The raw nomination to merge from\n     * @returns Succeed or not\n     */\n    merge(raw: NominationRAW): boolean {\n        if (this.id !== raw.id) return false;\n        if (this.status === umi.StatusCode.Pending) {\n            this.title = raw.title;\n            this.status = raw.status;\n            this.reasons = raw.reasons;\n            this.resultTime = raw.resultTime;\n            this.resultMailId = raw.resultMailId;\n        } else {\n            this.confirmedTime = raw.confirmedTime;\n            this.confirmationMailId = raw.confirmationMailId;\n        }\n        if (!this.lngLat) {\n            this.lngLat = raw.lngLat;\n        }\n        return true;\n    }\n\n    /**\n     * Parse nomination from JSON\n     * @param json Raw JSON to be parsed\n     * @throws An `Error` when JSON missing `id`, `title` or `image`\n     */\n    static from(json: NominationJSON): Nomination {\n        if (!json.id) throw new Error(ParseErrorReason.MISSING_ID);\n        // if (!json.title) throw new Error(ParseErrorReason.MISSING_TITLE);\n        if (!json.image) throw new Error(ParseErrorReason.MISSING_IMAGE);\n\n        // Fix old issues\n        const image = json.image.replace('\\r', '');\n\n        // Test format\n        if (!/^[a-zA-Z0-9]+$/.test(json.id)) {\n            throw new Error(ParseErrorReason.INVALID_ID);\n        }\n        if (!/^[0-9a-zA-Z\\-\\_]+$/.test(image)) {\n            throw new Error(ParseErrorReason.INVALID_IMAGE);\n        }\n\n        const nomination = new Nomination();\n        nomination.id = json.id;\n        nomination.title = json.title;\n        nomination.image = image;\n\n        if (json.scanner) {\n            nomination.scanner = json.scanner;\n        }\n\n        if (json.status === umi.StatusCode.Pending) {\n            nomination.status = umi.StatusCode.Pending;\n        } else if (json.status === umi.StatusCode.Accepted) {\n            nomination.status = umi.StatusCode.Accepted;\n        } else {\n            nomination.status = umi.StatusCode.Rejected;\n            if (json.status !== umi.Reason.undeclared) {\n                if (umi.reason.has(json.status)) {\n                    nomination.reasons.push(json.status);\n                }\n            }\n        }\n        if (json.reasons) {\n            for (const code of json.reasons) {\n                if (umi.reason.has(code) && !nomination.reasons.includes(code)) {\n                    nomination.reasons.push(code);\n                }\n            }\n        }\n\n        nomination.confirmedTime = json.confirmedTime > Nomination.timestampSecondBound ? json.confirmedTime : json.confirmedTime * 1000;\n        nomination.confirmationMailId = json.confirmationMailId;\n\n        if (json.resultTime) nomination.resultTime = json.resultTime > Nomination.timestampSecondBound ? json.resultTime : json.resultTime * 1000;\n        if (json.resultMailId) nomination.resultMailId = json.resultMailId;\n\n        if (json.lngLat) {\n            nomination.lngLat = {\n                lng: json.lngLat.lng,\n                lat: json.lngLat.lat,\n            }\n        }\n        return nomination;\n    }\n\n    /**\n     * Convert hash part of image URL to short ID\n     * @param imgUrl Hash part of the image URL\n     */\n    static parseId(imgUrl: string): string {\n        return imgUrl.replace(/[^a-zA-Z0-9]/g, '').slice(-10).toLowerCase();\n    }\n}\n\n/**\n * Callback for Array<Nomination>.filter()\n */\nexport type Predicator = (nomination: NominationRAW) => boolean;","import { umi } from '@/service/umi';\nimport { util } from '@/service/utils';\nimport { ProgressCallback } from '@/service/types';\nimport Nomination, { NominationRAW } from '@/service/nomination';\n\n/**\n * Host Brainstorming data and handle tasks related to Brainstorming\n */\nexport namespace brainstorming {\n\n    const mimeJSON = 'application/json';\n    const filename = 'bsdata.json';\n\n    export enum FailReason {\n        INDEXEDDB_ERROR = 'INDEXEDDB_ERROR',    // Unable to query local database\n        FIREBASE_ERROR  = 'FIREBASE_ERROR',     // Unable to query firebase\n        NOT_EXISTS      = 'NOT_EXISTS',         // Nomination not exists in local database or firebase\n        EARLY           = 'EARLY',              // Nomination got result before firebase exists\n    };\n\n    export interface ReviewRaw {\n        cultural: string;\n        description: string;\n        location: string;\n        quality: string;\n        safety: string;\n        uniqueness: string;\n    }\n\n    export interface Review {\n        JSON: ReviewRaw;\n        Timestamp: number;\n        author: string;\n        reasons: string;\n        stars: string;\n    }\n\n    export interface Record {\n        description: string;\n        hashTags: Array<string>;\n        imageUrl: string;\n        lastTime: number;\n        lat: string;\n        lng: string;\n        statement?: string;\n        streetAddress: string;\n        supportingImageUrl?: string;\n        title: string;\n        [name: string]: any | Review;\n    }\n\n    const databaseName = 'brainstorming';\n    const databaseVersion = 1;\n    const storeName = 'record';\n\n    let database: IDBDatabase | undefined = undefined;  // Local database\n\n    export async function init() {\n        return new Promise<boolean>((resolve, reject) => {\n            const request = window.indexedDB.open(databaseName, databaseVersion);\n            request.onsuccess = () => {\n                database = request.result;\n                resolve(true);\n            };\n            request.onerror = () => reject(request.error);\n            request.onupgradeneeded = () => {\n                request.result.createObjectStore(storeName);\n            };\n        });\n    }\n\n    /**\n     * Query data from local databse and firebase (full version only)\n     * @param nomination Nomination to query\n     * @param succeed Triggered when succeed to query data\n     * @param failed Triggered when Failed to query data\n     */\n    export async function query(nomination: NominationRAW): Promise<Record> {\n        if (beforeCreate(nomination)) {\n            throw new Error(FailReason.EARLY);\n        }\n        let record = await queryDatabase(nomination.id).catch(error => { throw error; });\n        if (record) return record;\n        record = await queryFirebase(nomination.id).catch(error => { throw error; });\n        if (!record) throw new Error(FailReason.NOT_EXISTS);\n        return record;\n    }\n\n    /**\n     * Query firebase to update local database\n     * @param nominations Nomination list\n     * @param finish Triggered when all query finishes\n     */\n    export async function update(nominations: Array<NominationRAW>, callback: ProgressCallback): Promise<number> {\n        let succeed = 0;\n        let processed = 0;\n        const total = nominations.length;\n        const queries: Array<Promise<void>> = [];\n        for (const nomination of nominations) {\n            if (beforeCreate(nomination)) {\n                processed++;\n                callback(processed, total);\n                continue;\n            }\n            const query = queryFirebase(nomination.id)\n                .then(record => { if (record) succeed++; })\n                .catch()\n                .finally(() => {\n                    processed++;\n                    callback(processed, total);\n                })\n            queries.push(query);\n        }\n        await Promise.allSettled(queries);\n        return succeed;\n    }\n\n    export async function getFromLocal(nomination: NominationRAW) {\n        if (beforeCreate(nomination)) return undefined;\n        return await queryDatabase(nomination.id);\n    }\n\n    export async function contains(nomination: NominationRAW) {\n        if (beforeCreate(nomination)) return false;\n        const record = await queryDatabase(nomination.id);\n        return typeof record !== 'undefined';\n    }\n\n    export async function importDatabase() {\n        const content = await util.importFile();\n        let data: Map<string, Record>;\n        try {\n            data = new Map(JSON.parse(content));\n        } catch (error) {\n            return 0;\n        }\n        for (const [key, record] of data) save(key, record);\n        return data.size;\n    }\n\n    export async function exportDatabase(): Promise<number> {\n        const list = await getAll();\n        if (list.length < 1) return 0;\n        const pairs: Array<[string, Record]> = list.map(record => [ Nomination.parseId(record.imageUrl), record]);\n        const blob = new Blob(\n            [ JSON.stringify(pairs, null, 4) ],\n            { type: mimeJSON }\n        );\n        util.exportFile(filename, blob);\n        return pairs.length;\n    }\n\n    /**\n     * Clear local database\n     */\n    export function clear() {\n        const store = getStore('readwrite');\n        if (!store) return;\n        store.clear();\n    }\n\n    /**\n     * Check if the nomination got result before creation of firebase, should skip query if true\n     * @param nomination The nomination\n     */\n    export function beforeCreate(nomination: NominationRAW): boolean {\n        return nomination.status !== umi.StatusCode.Pending && nomination.resultTime < 1518796800000;\n    }\n\n    /**\n     * Query from the local IndexedDB database\n     * @param id Brainstorming ID\n     */\n    async function queryDatabase(id: string): Promise<Record | undefined> {\n        const store = getStore('readonly');\n        if (!store) throw new Error(FailReason.INDEXEDDB_ERROR);\n        return await settled(store.get(id));\n    }\n\n    /**\n     * Query from the Firebase database\n     * @param id Brainstorming ID\n     */\n    async function queryFirebase(id: string): Promise<Record | undefined> {\n        let record: Record | undefined = undefined;\n        try {\n            const response = await fetch(`https://oprbrainstorming.firebaseio.com/c/reviews/${id}.json`);\n            record = await response.json();\n            if (record) await save(id, record);\n        } catch {\n            throw new Error(FailReason.FIREBASE_ERROR);\n        }\n        return record;\n    }\n\n    async function getAll(): Promise<Array<Record>> {\n        const store = getStore('readonly');\n        if (!store) return [];\n        return await settled(store.getAll()) ?? [];\n    }\n\n    async function save(id: string, record: Record) {\n        const store = getStore('readwrite');\n        if (!store) return;\n        await settled(store.put(record, id));\n    }\n\n    function getStore(mode: IDBTransactionMode): IDBObjectStore | undefined {\n        if (!database) return undefined;\n        return database.transaction([ storeName ], mode).objectStore(storeName);\n    }\n\n    function settled<T>(request: IDBRequest<T>) {\n        return new Promise<T | undefined>((resolve) => {\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => resolve(undefined);\n        });\n    }\n}","export namespace preferences {\n\n    export function set<T>(key: string, value: T) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    export function get<T>(key: string, def: T): T {\n        const value = localStorage.getItem(key);\n        if (value !== null) return JSON.parse(value);\n        return def;\n    }\n\n    export namespace general {\n\n        const keyQueryAfterLatest = 'potori.pref.general.queryAfterLatest';\n\n        export function queryAfterLatest(): boolean { return preferences.get(keyQueryAfterLatest, false); }\n        export function setQueryAfterLatest(value: boolean) { preferences.set(keyQueryAfterLatest, value); }\n    }\n\n    export namespace google {\n        \n        const keySync = 'potori.pref.google.sync';\n        \n        export function sync(): boolean { return preferences.get(keySync, false); }\n        export function setSync(value: boolean) { preferences.set(keySync, value); }\n    }\n\n    export namespace brainstorming {\n\n        const keyAutoQueryFirebase = 'potori.pref.brainstorming.autoQueryFirebase';\n\n        export function autoQueryFirebase(): boolean { return preferences.get(keyAutoQueryFirebase, false); }\n        export function setAutoQueryFirebase(value: boolean) { preferences.set(keyAutoQueryFirebase, value); }\n    }\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Dialog.vue?vue&type=style&index=0&id=cfbf7b90&lang=scss\"","<template>\n{{ symbol }}\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Prop } from 'vue-property-decorator';\n\nconst IconSymbolMap: Record<string, string> = {\n    'search': '\\uf002',\n    'th-list'   : '\\uf00b',\n    'check' : '\\uf00c',\n    'times' : '\\uf00d',\n    'cog'   : '\\uf013',\n    'clock' : '\\uf017',\n    'redo'  : '\\uf01e',\n    'edit'  : '\\uf044',\n    'info-circle'   : '\\uf05a',\n    'arrow-left': '\\uf060',\n    'arrow-up'  : '\\uf062',\n    'plus'  : '\\uf067',\n    'calendar-alt'  : '\\uf073',\n    'folder-open'   : '\\uf07c',\n    'chart-bar' : '\\uf080',\n    'globe' : '\\uf0ac',\n    'angle-up'  : '\\uf106',\n    'angle-down': '\\uf107',\n    'ellipsis-v': '\\uf142',\n    'trash' : '\\uf1f8',\n    'map'   : '\\uf279',\n    'sync-alt'  : '\\uf2f1',\n    'sign-in-alt'   : '\\uf2f6',\n    'redo-alt'  : '\\uf2f9',\n    'pen'   : '\\uf304',\n    'map-marker-alt': '\\uf3c5',\n    'mobile-alt': '\\uf3cd',\n    'tachometer-alt': '\\uf3fd',\n    'user-check': '\\uf4fc',\n    'brain' : '\\uf5dc',\n}\n\nexport default class MaterialIconRaw extends Vue {\n\n    private static nameRegex = /^[a-z\\-]+$/;\n\n    @Prop(String) readonly icon!: string;\n\n    get symbol(): string {\n        if (MaterialIconRaw.nameRegex.test(this.icon)) {\n            return IconSymbolMap[this.icon];\n        } else {\n            return this.icon;\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n$fa-font-path: '~@fortawesome/fontawesome-free/webfonts';\n@import '~@fortawesome/fontawesome-free/scss/solid';\n@import '~@fortawesome/fontawesome-free/scss/mixins';\n@import '~@fortawesome/fontawesome-free/scss/core';\n@import '~@fortawesome/fontawesome-free/scss/fixed-width';\n</style>","\nimport { Vue, Prop } from 'vue-property-decorator';\n\nconst IconSymbolMap: Record<string, string> = {\n    'search': '\\uf002',\n    'th-list'   : '\\uf00b',\n    'check' : '\\uf00c',\n    'times' : '\\uf00d',\n    'cog'   : '\\uf013',\n    'clock' : '\\uf017',\n    'redo'  : '\\uf01e',\n    'edit'  : '\\uf044',\n    'info-circle'   : '\\uf05a',\n    'arrow-left': '\\uf060',\n    'arrow-up'  : '\\uf062',\n    'plus'  : '\\uf067',\n    'calendar-alt'  : '\\uf073',\n    'folder-open'   : '\\uf07c',\n    'chart-bar' : '\\uf080',\n    'globe' : '\\uf0ac',\n    'angle-up'  : '\\uf106',\n    'angle-down': '\\uf107',\n    'ellipsis-v': '\\uf142',\n    'trash' : '\\uf1f8',\n    'map'   : '\\uf279',\n    'sync-alt'  : '\\uf2f1',\n    'sign-in-alt'   : '\\uf2f6',\n    'redo-alt'  : '\\uf2f9',\n    'pen'   : '\\uf304',\n    'map-marker-alt': '\\uf3c5',\n    'mobile-alt': '\\uf3cd',\n    'tachometer-alt': '\\uf3fd',\n    'user-check': '\\uf4fc',\n    'brain' : '\\uf5dc',\n}\n\nexport default class MaterialIconRaw extends Vue {\n\n    private static nameRegex = /^[a-z\\-]+$/;\n\n    @Prop(String) readonly icon!: string;\n\n    get symbol(): string {\n        if (MaterialIconRaw.nameRegex.test(this.icon)) {\n            return IconSymbolMap[this.icon];\n        } else {\n            return this.icon;\n        }\n    }\n}\n","import { render } from \"./IconRaw.vue?vue&type=template&id=cd6e7afa\"\nimport script from \"./IconRaw.vue?vue&type=script&lang=ts\"\nexport * from \"./IconRaw.vue?vue&type=script&lang=ts\"\n\nimport \"./IconRaw.vue?vue&type=style&index=0&id=cd6e7afa&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n<router-view/>\n<material-dialog v-model=\"alertOpen\">{{ alertMessage }}</material-dialog>\n<material-snackbar :message=\"informMessage\" v-model=\"informOpen\"/>\n</template>\n\n<script lang=\"ts\">\nimport { useI18n } from 'vue-i18n';\nimport { Vue, Options } from 'vue-property-decorator';\n\nimport { delibird } from './service/delibird';\n\nimport MaterialDialog from '@/components/material/Dialog.vue';\nimport MaterialSnackbar from '@/components/material/Snackbar.vue';\n\n@Options({\n    components: {\n        MaterialDialog,\n        MaterialSnackbar\n    }\n})\nexport default class App extends Vue {\n\n    alertMessage: string = '';\n    alertOpen: boolean = false;\n\n    informMessage: string = '';\n    informOpen: boolean = false;\n\n    mounted() {\n        delibird.events.alert = (message) => {\n            this.alertMessage = message;\n            this.alertOpen = true;\n        };\n        delibird.events.inform = (message) => {\n            this.informMessage = message;\n            this.informOpen = true;\n        };\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use './variables';\n@use '@material/theme' with (\n    $primary: variables.$primary,\n    $secondary: variables.$secondary,\n);\n@use '~@material/typography';\n@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap');\n\n@include theme.core-styles;\n\nhtml {\n    // Fix for iOS standalone mode\n    height: calc(100% + env(safe-area-inset-top, 0));\n}\n\nbody, #app {\n    margin: 0;\n    height: 100%;\n}\n\n#app {\n    @include typography.base();\n    display: flex;\n    flex-flow: column nowrap;\n\n    > main:not(.ignore-safe-area) {\n        margin-bottom: env(safe-area-inset-bottom);\n        margin-left: env(safe-area-inset-left);\n        margin-right: env(safe-area-inset-right);\n    }\n}\n</style>\n","<template>\n<div class=\"mdc-dialog\">\n    <div class=\"mdc-dialog__container\">\n        <div class=\"mdc-dialog__surface\" role=\"alertdialog\" aria-modal=\"true\">\n            <div class=\"mdc-dialog__content\">\n                <slot/>\n            </div>\n            <div class=\"mdc-dialog__actions\">\n                <slot name=\"actions\">\n                    <material-dialog-action :text=\"$t('discard')\" action=\"close\" as-default/>\n                </slot>\n            </div>\n        </div>\n    </div>\n    <div class=\"mdc-dialog__scrim\"></div>\n</div>\n</template>\n\n<script lang=\"ts\">\nimport { MDCDialog } from '@material/dialog';\nimport { Vue, Model, Options, Watch } from 'vue-property-decorator';\n\nimport MaterialDialogAction from './DialogAction.vue';\n\nimport locales from './Dialog.locales.json';\n\n@Options({\n    components: {\n        MaterialDialogAction\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class MaterialDialog extends Vue {\n\n    @Model('modelValue', { type: Boolean, default: false }) readonly value!: boolean;\n\n    private ctrl?: MDCDialog;\n\n    @Watch('value')\n    onValueChanged(newVal: boolean, _: string) {\n        if (!this.ctrl) return;\n        if (newVal) this.ctrl.open();\n    }\n\n    mounted() {\n        this.ctrl = MDCDialog.attachTo(this.$el);\n        this.ctrl.listen('MDCDialog:closed', () => {\n            this.$emit('update:modelValue', false);\n        });\n        if (this.value) this.ctrl.open();\n    }\n\n    unmounted() {\n        if (this.ctrl?.isOpen) this.ctrl?.close();\n        this.ctrl?.destroy();\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use \"@material/dialog\";\n\n@include dialog.core-styles;\n</style>","<template>\n<material-button\n    type=\"button\" class=\"mdc-dialog__button\"\n    :data-mdc-dialog-action=\"action\"\n    :data-mdc-dialog-button-default=\"asDefault\">\n    {{ text }}\n</material-button>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialButton from './Button.vue';\n\n@Options({\n    components: {\n        MaterialButton\n    }\n})\nexport default class MaterialDialogAction extends Vue {\n    @Prop(String) readonly action?: string;\n    @Prop(Boolean) readonly asDefault?: boolean;\n    @Prop(String) readonly text!: string;\n}\n</script>\n\n<style lang=\"scss\">\n\n</style>","\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialButton from './Button.vue';\n\n@Options({\n    components: {\n        MaterialButton\n    }\n})\nexport default class MaterialDialogAction extends Vue {\n    @Prop(String) readonly action?: string;\n    @Prop(Boolean) readonly asDefault?: boolean;\n    @Prop(String) readonly text!: string;\n}\n","import { render } from \"./DialogAction.vue?vue&type=template&id=5ae349b4\"\nimport script from \"./DialogAction.vue?vue&type=script&lang=ts\"\nexport * from \"./DialogAction.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { MDCDialog } from '@material/dialog';\nimport { Vue, Model, Options, Watch } from 'vue-property-decorator';\n\nimport MaterialDialogAction from './DialogAction.vue';\n\nimport locales from './Dialog.locales.json';\n\n@Options({\n    components: {\n        MaterialDialogAction\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class MaterialDialog extends Vue {\n\n    @Model('modelValue', { type: Boolean, default: false }) readonly value!: boolean;\n\n    private ctrl?: MDCDialog;\n\n    @Watch('value')\n    onValueChanged(newVal: boolean, _: string) {\n        if (!this.ctrl) return;\n        if (newVal) this.ctrl.open();\n    }\n\n    mounted() {\n        this.ctrl = MDCDialog.attachTo(this.$el);\n        this.ctrl.listen('MDCDialog:closed', () => {\n            this.$emit('update:modelValue', false);\n        });\n        if (this.value) this.ctrl.open();\n    }\n\n    unmounted() {\n        if (this.ctrl?.isOpen) this.ctrl?.close();\n        this.ctrl?.destroy();\n    }\n}\n","import { render } from \"./Dialog.vue?vue&type=template&id=cfbf7b90\"\nimport script from \"./Dialog.vue?vue&type=script&lang=ts\"\nexport * from \"./Dialog.vue?vue&type=script&lang=ts\"\n\nimport \"./Dialog.vue?vue&type=style&index=0&id=cfbf7b90&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n<aside class=\"mdc-snackbar\">\n    <div class=\"mdc-snackbar__surface\" role=\"status\" aria-relevant=\"additions\">\n        <div class=\"mdc-snackbar__label\" aria-atomic=\"false\"></div>\n        <div class=\"mdc-snackbar__actions\" aria-atomic=\"true\">\n            <material-icon-button class=\"mdc-snackbar__dismiss\" icon=\"times\"/>\n        </div>\n    </div>\n</aside>\n</template>\n\n<script lang=\"ts\">\nimport { MDCSnackbar } from '@material/snackbar';\nimport { Vue, Model, Options, Prop, Watch } from 'vue-property-decorator';\n\nimport MaterialIconButton from './IconButton.vue';\n\n@Options({\n    components: {\n        MaterialIconButton\n    }\n})\nexport default class MaterialSnackbar extends Vue {\n\n    @Model('modelValue', { type: Boolean, default: false }) readonly value!: boolean;\n    @Prop(String) readonly message!: string;\n\n    private ctrl?: MDCSnackbar;\n\n    @Watch('message')\n    onMessageChanged(newVal: string, _: string) {\n        if (!this.ctrl) return;\n        this.ctrl.labelText = newVal;\n    }\n\n    @Watch('value')\n    onValueChanged(newVal: boolean, _: string) {\n        if (!this.ctrl) return;\n        if (newVal) this.ctrl.open();\n    }\n\n    mounted() {\n        this.ctrl = MDCSnackbar.attachTo(this.$el);\n        this.ctrl.labelText = this.message;\n        this.ctrl.listen('MDCSnackbar:closed', () => {\n            this.$emit('update:modelValue', false);\n        });\n        if (this.value) this.ctrl.open();\n    }\n\n    unmounted() {\n        if (this.ctrl?.isOpen) this.ctrl?.close();\n        this.ctrl?.destroy();\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use \"@material/snackbar/mdc-snackbar\";\n</style>","\nimport { MDCSnackbar } from '@material/snackbar';\nimport { Vue, Model, Options, Prop, Watch } from 'vue-property-decorator';\n\nimport MaterialIconButton from './IconButton.vue';\n\n@Options({\n    components: {\n        MaterialIconButton\n    }\n})\nexport default class MaterialSnackbar extends Vue {\n\n    @Model('modelValue', { type: Boolean, default: false }) readonly value!: boolean;\n    @Prop(String) readonly message!: string;\n\n    private ctrl?: MDCSnackbar;\n\n    @Watch('message')\n    onMessageChanged(newVal: string, _: string) {\n        if (!this.ctrl) return;\n        this.ctrl.labelText = newVal;\n    }\n\n    @Watch('value')\n    onValueChanged(newVal: boolean, _: string) {\n        if (!this.ctrl) return;\n        if (newVal) this.ctrl.open();\n    }\n\n    mounted() {\n        this.ctrl = MDCSnackbar.attachTo(this.$el);\n        this.ctrl.labelText = this.message;\n        this.ctrl.listen('MDCSnackbar:closed', () => {\n            this.$emit('update:modelValue', false);\n        });\n        if (this.value) this.ctrl.open();\n    }\n\n    unmounted() {\n        if (this.ctrl?.isOpen) this.ctrl?.close();\n        this.ctrl?.destroy();\n    }\n}\n","import { render } from \"./Snackbar.vue?vue&type=template&id=12cf8ebd\"\nimport script from \"./Snackbar.vue?vue&type=script&lang=ts\"\nexport * from \"./Snackbar.vue?vue&type=script&lang=ts\"\n\nimport \"./Snackbar.vue?vue&type=style&index=0&id=12cf8ebd&lang=scss\"\nscript.render = render\n\nexport default script","\nimport { useI18n } from 'vue-i18n';\nimport { Vue, Options } from 'vue-property-decorator';\n\nimport { delibird } from './service/delibird';\n\nimport MaterialDialog from '@/components/material/Dialog.vue';\nimport MaterialSnackbar from '@/components/material/Snackbar.vue';\n\n@Options({\n    components: {\n        MaterialDialog,\n        MaterialSnackbar\n    }\n})\nexport default class App extends Vue {\n\n    alertMessage: string = '';\n    alertOpen: boolean = false;\n\n    informMessage: string = '';\n    informOpen: boolean = false;\n\n    mounted() {\n        delibird.events.alert = (message) => {\n            this.alertMessage = message;\n            this.alertOpen = true;\n        };\n        delibird.events.inform = (message) => {\n            this.informMessage = message;\n            this.informOpen = true;\n        };\n    }\n}\n","import { render } from \"./App.vue?vue&type=template&id=68ba03c6\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=68ba03c6&lang=scss\"\nscript.render = render\n\nexport default script","// This file is generated by scripts/build-locals.ts\nimport en from './en.json'\nimport zh from './zh.json'\n\nexport default {\n    'en': en,\n    'zh': zh,\n};","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router';\n\nconst routes: Array<RouteRecordRaw> = [\n    {\n        path: '/',\n        name: 'Dashboard',\n        component: () => import(/* webpackChunkName: 'dashboard' */ '@/views/Dashboard.vue')\n    },\n\n    {\n        path: '/charts',\n        name: 'Charts',\n        component: () => import(/* webpackChunkName: 'charts' */ '@/views/Charts.vue'),\n    },\n    {\n        path: '/brainstorming',\n        name: 'Brainstorming',\n        component: () => import(/* webpackChunkName: 'brainstorming' */ '@/views/Brainstorming.vue'),\n    },\n\n\n    {\n        path: '/list',\n        name: 'List',\n        component: () => import(/* webpackChunkName: 'list' */ '@/views/NominationList.vue'),\n    },\n    {\n        path: '/details',\n        name: 'Details',\n        component: () => import(/* webpackChunkName: 'details' */ '@/views/NominationDetails.vue'),\n    },\n    {\n        path: '/map',\n        name: 'Map',\n        component: () => import(/* webpackChunkName: 'map' */ '@/views/NominationMap.vue'),\n    },\n    {\n      path: '/preferences',\n      name: 'Preferences',\n      component: () => import(/* webpackChunkName: 'preferences' */ '@/views/Preferences.vue')\n    },\n\n    {\n        path: '/match',\n        name: 'Match',\n        component: () => import(/* webpackChunkName: 'match' */ '@/views/MatchView.vue')\n    },\n];\n\nconst router = createRouter({\n    history: createWebHashHistory('/next/'),\n    routes: routes,\n});\n\nexport default router\n","import { Module } from 'vuex';\n\nimport type { State } from '@/store/state';\n\nexport interface GoogleState {\n    loaded: boolean;\n    authed: boolean;\n}\n\nconst googleModule: Module<GoogleState, State> = {\n    namespaced: true,\n    state: {\n        loaded: false,\n        authed: false,\n    },\n    mutations: {\n        loaded(state: GoogleState) {\n            state.loaded = true;\n        },\n        setAuthed(state: GoogleState, payload: boolean) {\n            state.authed = payload;\n        },\n    }\n}\n\nexport default googleModule;","import { Module } from 'vuex';\n\nimport type { State } from '@/store/state';\n\nexport interface DiaState {\n    saveID: number;\n}\n\nconst diaModule: Module<DiaState, State> = {\n    namespaced: true,\n    state: {\n        saveID: 0\n    },\n    mutations: {\n        saved(state: DiaState, _) {\n            state.saveID++;\n        }\n    }\n}\n\nexport default diaModule;","import { Module } from 'vuex';\n\nimport type { State } from '@/store/state';\n\nexport interface ProgressState {\n    progress: number;\n    max: number;\n}\n\nconst progressModule: Module<ProgressState, State> = {\n    namespaced: true,\n    state: {\n        progress: 0,\n        max: 0\n    },\n    mutations: {\n        setProgress(state: ProgressState, payload: number) {\n            state.progress = payload;\n        },\n        setMax(state: ProgressState, payload: number) {\n            state.max = payload;\n        }\n    }\n}\n\nexport default progressModule;","import { Module } from 'vuex';\n\nimport type { State } from '@/store/state';\nimport { ServiceStatus } from '@/service';\n\nexport interface ServiceState {\n    status: ServiceStatus;\n}\n\nconst serviceModule: Module<ServiceState, State> = {\n    namespaced: true,\n    state: {\n        status: ServiceStatus.idle\n    },\n    mutations: {\n        setStatus(state: ServiceState, payload: ServiceStatus) {\n            state.status = payload;\n        },\n    }\n}\n\nexport default serviceModule;","import { createStore } from 'vuex'\n\nimport type { State } from './state';\nimport google from './modules/google';\nimport dia from './modules/dia';\nimport progress from './modules/progress';\nimport service from './modules/service';\n\nexport default createStore<State>({\n    modules: { service, dia, google, progress }\n});\n","import { createApp } from 'vue';\nimport { createI18n } from 'vue-i18n';\n\nimport { service } from './service';\nimport App from './App.vue';\nimport locales from './locales';\nimport router from './router';\nimport store from './store';\n\nconst i18n = createI18n({\n    locale: navigator.language,\n    fallbackLocale: 'en',\n    messages: locales\n});\n\nservice.init(store, i18n.global);\ncreateApp(App)\n    .use(i18n)\n    .use(store)\n    .use(router)\n    .mount('#app');\n","import type { VueI18n } from 'vue-i18n';\n\nimport data from '@/data/umi/umi.json';\nimport { Predicator } from '@/service/nomination';\n\n/**\n * Keep all status data\n */\nexport namespace umi {\n\n    /**\n     * Code to identify scanner\n     */\n    export enum ScannerCode {\n        Unknown     = 0,\n        Redacted    = 1,\n        Prime       = 2,\n        GO          = 3,\n    }\n    \n    /**\n     * Scanner information\n     */\n    export class Scanner {\n        readonly code: ScannerCode;\n        readonly title: string;\n\n        readonly predicator: Predicator;    // Predicator for filter\n\n        constructor(code: ScannerCode, title: string) {\n            this.code = code;\n            this.title = title;\n            this.predicator = (nomination) => nomination.scanner === this.code;\n        }\n    }\n\n    /**\n     * Code to identify status\n     */\n    export enum StatusCode {\n        Pending     = 0,\n        Accepted    = 1,\n        Rejected    = 101,\n    }\n\n    /**\n     * Code to identify reason\n     */\n    export type ReasonCode = number;\n    \n    /**\n     * Status information\n     */\n    export class Status {\n\n        static colors = new Map<StatusCode, string>([\n            [ umi.StatusCode.Pending, '#CAAF85' ],\n            [ umi.StatusCode.Accepted, '#35C572' ],\n            [ umi.StatusCode.Rejected, '#B0373C' ],\n        ]);\n\n        readonly code: StatusCode; // Code to identify the status and saved in file\n        readonly title: string; // Title to display\n        readonly icon: string;  // Icon to represent the status\n        readonly color: string; // Color\n    \n        readonly queries: Map<ScannerCode, string>;  // Queries to search mails, <scanner, query>\n\n        readonly predicator: Predicator;    // Predicator for filter\n    \n        constructor(\n            code: number, title: string, icon: string,\n            queries: Map<ScannerCode, string>\n        ) {\n            this.code = code;\n            this.title = title;\n            this.icon = icon;\n            this.color = Status.colors.get(this.code)!;\n            console.log(`${this.code} -> ${this.color}`);\n\n            this.queries = queries;\n            this.predicator = (nomination) => nomination.status === this.code;\n        }\n    }\n    \n    /**\n     * Reason information\n     */\n    export class Reason {\n\n        static undeclared: ReasonCode = 101;\n        static duplicated: ReasonCode = 102;\n        static close: ReasonCode = 103;\n\n        //readonly key: string;   // Key of the status\n        readonly code: ReasonCode; // Code to identify the status and saved in file\n        readonly title: string; // Title to display\n        readonly icon: string;  // Icon to represent the status\n    \n        readonly color: string; // Color to represent the reason in charts\n        readonly keywords: Map<ScannerCode, Array<string>>;  // Keywords to identify the reason, <scanner, keywords>\n\n        readonly predicator: Predicator;    // Predicator for filter\n    \n        constructor(\n            code: number, title: string, icon: string,\n            color: string, keyword: Map<ScannerCode, Array<string>>\n        ) {\n            this.code = code;\n            this.title = title;\n            this.icon = icon;\n\n            this.color = color;\n            this.keywords = keyword;\n\n            if (code === Reason.undeclared) {\n                this.predicator = (nomination) => nomination.status === StatusCode.Rejected && nomination.reasons.length < 1;\n            } else {\n                this.predicator = (nomination) => nomination.status === StatusCode.Rejected && nomination.reasons.indexOf(code) > -1;\n            }\n        }\n    }\n\n    /**\n     * Common type of `Scanner`, `Status` and `Reason`\n     */\n    export type CommonSense = Scanner | Status | Reason;\n\n    export const scanner = new Map<ScannerCode, Scanner>();\n    export const status = new Map<StatusCode, Status>();\n    export const reason = new Map<ReasonCode, Reason>();\n    export const version = data.version;\n\n    export function init(i18n: VueI18n<unknown, unknown, unknown>) {\n        for (const raw of data.scanners) {\n            const item = new Scanner(raw.code, raw.title);\n            scanner.set(item.code, item);\n        }\n        for (const raw of data.statuses) {\n            const item = new Status(\n                raw.code, i18n.t(raw.title), raw.iconFA,\n                raw.queries.reduce((map, query) => {\n                    map.set(query.scanner, query.query);\n                    return map;\n                }, new Map<ScannerCode, string>())\n            );\n            status.set(item.code, item);\n        }\n        for (const raw of data.reasons) {\n            const item = new Reason(\n                raw.code, i18n.t(raw.title), raw.iconFA, raw.color,\n                raw.keywords.reduce((map, keywords) => {\n                    map.set(keywords.scanner, keywords.keywords);\n                    return map;\n                }, new Map<ScannerCode, Array<string>>())\n            );\n            reason.set(item.code, item);\n        }\n    }\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./IconButton.vue?vue&type=style&index=0&id=0b15f13c&lang=scss\""],"sourceRoot":""}