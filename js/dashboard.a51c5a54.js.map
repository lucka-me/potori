{"version":3,"sources":["webpack:///./src/views/Dashboard.vue?9198","webpack:///./src/views/Dashboard.vue","webpack:///./src/components/dashboard/Status.vue","webpack:///./src/components/dashboard/Status.vue?8c11","webpack:///./src/components/dashboard/Status.vue?dd95","webpack:///./src/components/dashboard/Highlight.vue","webpack:///./src/components/dashboard/Card.vue","webpack:///./src/components/dashboard/Card.vue?7688","webpack:///./src/components/dashboard/Card.vue?58a4","webpack:///./src/components/dashboard/Highlight.vue?7b33","webpack:///./src/components/dashboard/Highlight.vue?4da1","webpack:///./src/components/dashboard/Gallery.vue","webpack:///./src/components/dashboard/Gallery.vue?6131","webpack:///./src/components/dashboard/Gallery.vue?5842","webpack:///./src/components/dashboard/Scanners.vue","webpack:///./src/components/dashboard/Scanners.vue?c251","webpack:///./src/components/dashboard/Scanners.vue?8fc7","webpack:///./src/components/dashboard/Reasons.vue","webpack:///./src/components/dashboard/Reasons.vue?687c","webpack:///./src/components/dashboard/Reasons.vue?0e4f","webpack:///./src/views/Dashboard.vue?64a9","webpack:///./src/views/Dashboard.vue?a717","webpack:///./src/components/material/Icon.vue","webpack:///./src/components/material/Icon.vue?05b9","webpack:///./src/components/material/Icon.vue?9f96","webpack:///./src/components/material/Card.vue?51a9","webpack:///./src/components/dashboard/Reasons.vue?e012","webpack:///./src/components/dashboard/Gallery.vue?409d","webpack:///./src/components/dashboard/Card.vue?3170","webpack:///./src/components/dashboard/Status.vue?2d01","webpack:///./src/components/material/Card.vue","webpack:///./src/components/material/Card.vue?74eb","webpack:///./src/components/material/Card.vue?9d79"],"names":["class","title","$t","icon","refresh","openPreference","empty","text","progressText","determinate","progressDeterminate","link","match","openCharts","openBrainstorming","this","$store","state","dia","saveID","status","service","Status","processingMails","queryingBrainstorming","syncing","gapiLoaded","progress","max","google","authed","requestMatch","showLinkButton","showMatchButton","showChartsButton","idle","loaded","updateData","signIn","$router","push","path","count","components","MaterialIconButton","LinearProgress","i18n","messages","render","countAll","open","dataset","data","key","code","fixed-width","String","Number","MaterialCard","MaterialIcon","location","query","stats","Map","umi","values","set","nominations","getAll","nomination","get","length","Array","from","DashboardCard","id","image","imageUrl","square-image","statusData","raws","predicator","map","sort","comparatorByTime","datePast30Days","Date","now","confirmedTime","resultTime","scanner","ScannerCode","Unknown","filter","a","b","toggleMore","more","reason","datasetAll","slice","StatusCode","Rejected","MaterialButton","MaterialTopAppBar","MaterialTopAppBarAdjust","Highlight","Gallery","Scanners","Reasons","className","name","fixedWidth","Boolean","MaterialIconRaw","mediaClassName","style","mediaStyle","squareImage"],"mappings":"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","file":"js/dashboard.a51c5a54.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Dashboard.vue?vue&type=style&index=0&id=3d652272&lang=scss\"","<template>\n<material-top-app-bar :title=\"$t('title')\">\n    <material-icon-button v-if=\"canRefresh\" icon=\"redo\" :title=\"$t('refresh')\" @click=\"refresh\"/>\n    <material-icon-button icon=\"cog\" :title=\"$t('preferences')\" @click=\"openPreference\"/>\n</material-top-app-bar>\n<material-top-app-bar-adjust/>\n<main class=\"dashboard\">\n    <status/>\n    <highlight  v-if=\"!empty\"/>\n    <gallery    v-if=\"!empty\"/>\n    <scanners   v-if=\"!empty\"/>\n    <reasons    v-if=\"!empty\"/>\n</main>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options, Watch } from 'vue-property-decorator';\n\nimport { service } from '@/service';\n\nimport MaterialIconButton from '@/components/material/IconButton.vue';\nimport MaterialTopAppBar from '@/components/material/TopAppBar.vue';\nimport MaterialTopAppBarAdjust from '@/components/material/TopAppBarAdjust.vue';\nimport Status from '@/components/dashboard/Status.vue';\nimport Highlight from '@/components/dashboard/Highlight.vue';\nimport Gallery from '@/components/dashboard/Gallery.vue';\nimport Scanners from '@/components/dashboard/Scanners.vue';\nimport Reasons from '@/components/dashboard/Reasons.vue';\n\nimport locales from './Dashboard.locales.json';\nimport { dia } from '@/service/dia';\n\n@Options({\n    components: {\n        MaterialTopAppBar, MaterialTopAppBarAdjust,\n        MaterialIconButton,\n        Status, Highlight, Gallery, Scanners, Reasons\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Dashboard extends Vue {\n\n    empty: boolean = true;\n\n    get canRefresh() {\n        return this.$store.state.service.status === service.Status.idle && this.$store.state.google.authed;\n    }\n\n    get saveID(): number {\n        return this.$store.state.dia.saveID;\n    }\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    refresh() {\n        service.refresh();\n    }\n\n    openPreference() {\n        this.$router.push({ path: '/preferences' });\n    }\n\n    private async updateData() {\n        const count = await dia.count();\n        this.empty = count < 1;\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use '~@material/typography';\n\n.dashboard {\n    padding: 1rem;\n\n    > h2 {\n        @include typography.typography(headline4);\n\n        margin-top: 0.2em;\n        margin-bottom: 0.1em;\n    }\n\n    > .card-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));\n        gap: 0.6rem;\n    }\n}\n</style>","<template>\n<div class=\"status\">\n    <linear-progress v-if=\"showProgress\" :text=\"$t(progressText)\" :determinate=\"progressDeterminate\"/>\n    <div v-if=\"showActions\" class=\"actions\">\n        <material-icon-button\n            v-if=\"showLinkButton\" icon=\"sign-in-alt\" :title=\"$t('link')\" @click=\"link\"/>\n        <material-icon-button\n            v-if=\"showMatchButton\" icon=\"user-check\" :title=\"$t('match')\" @click=\"match\"/>\n        <material-icon-button\n            v-if=\"showChartsButton\" icon=\"chart-bar\" :title=\"$t('charts')\" @click=\"openCharts\"/>\n        <material-icon-button\n            v-if=\"showChartsButton\" icon=\"brain\" :title=\"$t('brainstorming')\" @click=\"openBrainstorming\"/>\n    </div>\n</div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options, Watch } from 'vue-property-decorator';\n\nimport { dia } from '@/service/dia';\nimport { service } from '@/service';\n\nimport MaterialIconButton from '@/components/material/IconButton.vue';\nimport LinearProgress from '@/components/basic/LinearProgress.vue';\n\nimport locales from './Status.locales.json';\n\n@Options({\n    components: {\n        MaterialIconButton,\n        LinearProgress\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Status extends Vue {\n\n    empty: boolean = true;\n\n    get saveID(): number {\n        return this.$store.state.dia.saveID;\n    }\n\n    get showProgress(): boolean {\n        const status = this.$store.state.service.status;\n        if (status === service.Status.processingMails) return true;\n        if (status === service.Status.queryingBrainstorming) return true;\n        if (status === service.Status.syncing) return true;\n        if (this.empty && !this.gapiLoaded) return true;\n        return false;\n    }\n\n    get progressText(): string {\n        const status = this.$store.state.service.status;\n        if (status === service.Status.processingMails) return 'processingMails';\n        if (status === service.Status.queryingBrainstorming) return 'queryingBrainstorming';\n        if (status === service.Status.syncing) return 'syncing';\n        if (this.empty && !this.gapiLoaded) return 'loadingGAPI';\n        return '';\n    }\n\n    get progressDeterminate(): boolean {\n        const status = this.$store.state.service.status;\n        if (status === service.Status.processingMails) return this.$store.state.progress.max > 0;\n        if (status === service.Status.queryingBrainstorming) return true;\n        return false\n    }\n\n    get showLinkButton(): boolean {\n        return this.gapiLoaded && !this.$store.state.google.authed;\n    }\n\n    get showMatchButton(): boolean {\n        return this.$store.state.service.status === service.Status.requestMatch;\n    }\n\n    get showChartsButton(): boolean {\n        return !this.empty;\n    }\n\n    get showActions(): boolean {\n        return this.showLinkButton || this.showMatchButton || this.showChartsButton;\n    }\n\n    get idle() {\n        return this.$store.state.service.status === service.Status.idle;\n    }\n\n    get gapiLoaded() {\n        return this.$store.state.google.loaded;\n    }\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    link() {\n        service.signIn();\n    }\n\n    match() {\n        this.$router.push({ path: '/match' });\n    }\n\n    openCharts() {\n        this.$router.push({ path: '/charts' });\n    }\n\n    openBrainstorming() {\n        this.$router.push({ path: '/brainstorming' });\n    }\n\n    private async updateData() {\n        const count = await dia.count();\n        this.empty = count < 1;\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.status {\n    > .actions {\n        display: flex;\n        flex-flow: row nowrap;\n    }\n\n    > .progress + .actions {\n        margin-block-start: 0.4rem;\n    }\n}\n</style>","\nimport { Vue, Options, Watch } from 'vue-property-decorator';\n\nimport { dia } from '@/service/dia';\nimport { service } from '@/service';\n\nimport MaterialIconButton from '@/components/material/IconButton.vue';\nimport LinearProgress from '@/components/basic/LinearProgress.vue';\n\nimport locales from './Status.locales.json';\n\n@Options({\n    components: {\n        MaterialIconButton,\n        LinearProgress\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Status extends Vue {\n\n    empty: boolean = true;\n\n    get saveID(): number {\n        return this.$store.state.dia.saveID;\n    }\n\n    get showProgress(): boolean {\n        const status = this.$store.state.service.status;\n        if (status === service.Status.processingMails) return true;\n        if (status === service.Status.queryingBrainstorming) return true;\n        if (status === service.Status.syncing) return true;\n        if (this.empty && !this.gapiLoaded) return true;\n        return false;\n    }\n\n    get progressText(): string {\n        const status = this.$store.state.service.status;\n        if (status === service.Status.processingMails) return 'processingMails';\n        if (status === service.Status.queryingBrainstorming) return 'queryingBrainstorming';\n        if (status === service.Status.syncing) return 'syncing';\n        if (this.empty && !this.gapiLoaded) return 'loadingGAPI';\n        return '';\n    }\n\n    get progressDeterminate(): boolean {\n        const status = this.$store.state.service.status;\n        if (status === service.Status.processingMails) return this.$store.state.progress.max > 0;\n        if (status === service.Status.queryingBrainstorming) return true;\n        return false\n    }\n\n    get showLinkButton(): boolean {\n        return this.gapiLoaded && !this.$store.state.google.authed;\n    }\n\n    get showMatchButton(): boolean {\n        return this.$store.state.service.status === service.Status.requestMatch;\n    }\n\n    get showChartsButton(): boolean {\n        return !this.empty;\n    }\n\n    get showActions(): boolean {\n        return this.showLinkButton || this.showMatchButton || this.showChartsButton;\n    }\n\n    get idle() {\n        return this.$store.state.service.status === service.Status.idle;\n    }\n\n    get gapiLoaded() {\n        return this.$store.state.google.loaded;\n    }\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    link() {\n        service.signIn();\n    }\n\n    match() {\n        this.$router.push({ path: '/match' });\n    }\n\n    openCharts() {\n        this.$router.push({ path: '/charts' });\n    }\n\n    openBrainstorming() {\n        this.$router.push({ path: '/brainstorming' });\n    }\n\n    private async updateData() {\n        const count = await dia.count();\n        this.empty = count < 1;\n    }\n}\n","import { render } from \"./Status.vue?vue&type=template&id=1b8cdaa4\"\nimport script from \"./Status.vue?vue&type=script&lang=ts\"\nexport * from \"./Status.vue?vue&type=script&lang=ts\"\n\nimport \"./Status.vue?vue&type=style&index=0&id=1b8cdaa4&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n<h2>{{ $t('header') }}</h2>\n<div class=\"card-grid\">\n    <dashboard-card :title=\"$t('all')\" icon=\"arrow-up\" :count=\"countAll\" @click=\"open\"/>\n    <dashboard-card\n        v-for=\"data of dataset\" :key=\"data.status.code\"\n        :title=\"data.status.title\" :icon=\"data.status.icon\" :count=\"data.count\"\n        @click=\"open(data.status)\"\n    />\n</div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options, Watch } from 'vue-property-decorator';\nimport { RouteLocationRaw } from 'vue-router';\n\nimport { dia } from '@/service/dia';\nimport { umi } from '@/service/umi';\n\nimport DashboardCard from './Card.vue';\n\nimport locales from './Highlight.locales.json';\n\ninterface StatusData {\n    status: umi.Status;\n    count: number;\n}\n\n@Options({\n    components: {\n        DashboardCard\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Highlight extends Vue {\n\n    countAll: number = 0;\n    dataset: Array<StatusData> = [];\n\n    get saveID(): number {\n        return this.$store.state.dia.saveID;\n    }\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    open(status?: umi.Status) {\n        const location: RouteLocationRaw = { path: '/list' };\n        if (status) location.query = { status: status.code };\n        this.$router.push(location);\n    }\n\n    private async updateData() {\n        const stats = new Map<umi.StatusCode, StatusData>();\n        for (const status of umi.status.values()) {\n            stats.set(status.code, { status: status, count: 0 });\n        }\n        const nominations = await dia.getAll();\n        for (const nomination of nominations) {\n            const data = stats.get(nomination.status)!;\n            data.count++;\n        }\n        this.countAll = nominations.length;\n        this.dataset = Array.from(stats.values());\n    }\n}\n</script>\n\n<style lang=\"scss\">\n\n</style>","<template>\n<material-card class=\"dashboard-card\">\n    <div class=\"content\">\n        <div class=\"label\">\n            <material-icon :icon=\"icon\" fixed-width/>\n            <span class=\"title\">{{ title }}</span>\n        </div>\n        <div class=\"count\">{{ count }}</div>\n    </div>\n</material-card>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialCard from '@/components/material/Card.vue';\nimport MaterialIcon from '@/components/material/Icon.vue';\n\n@Options({\n    components: {\n        MaterialCard, MaterialIcon\n    },\n})\nexport default class DashboardCard extends Vue {\n    @Prop(String) readonly icon!: string;\n    @Prop(String) readonly title!: string;\n    @Prop(Number) readonly count!: number;\n}\n</script>\n\n<style lang=\"scss\">\n@use '~@material/typography';\n\n.dashboard-card {\n\n    .content {\n\n        margin: 0.4em;\n        overflow: hidden;\n\n        > div {\n            @include typography.overflow-ellipsis;\n        }\n\n        > .label {\n            > .title {\n                margin-inline-start: 0.2em;\n            }\n        }\n\n        > .count {\n            @include typography.typography(headline2);\n            margin-top: 0.1em;\n        }\n    }\n}\n</style>","\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialCard from '@/components/material/Card.vue';\nimport MaterialIcon from '@/components/material/Icon.vue';\n\n@Options({\n    components: {\n        MaterialCard, MaterialIcon\n    },\n})\nexport default class DashboardCard extends Vue {\n    @Prop(String) readonly icon!: string;\n    @Prop(String) readonly title!: string;\n    @Prop(Number) readonly count!: number;\n}\n","import { render } from \"./Card.vue?vue&type=template&id=60c770ed\"\nimport script from \"./Card.vue?vue&type=script&lang=ts\"\nexport * from \"./Card.vue?vue&type=script&lang=ts\"\n\nimport \"./Card.vue?vue&type=style&index=0&id=60c770ed&lang=scss\"\nscript.render = render\n\nexport default script","\nimport { Vue, Options, Watch } from 'vue-property-decorator';\nimport { RouteLocationRaw } from 'vue-router';\n\nimport { dia } from '@/service/dia';\nimport { umi } from '@/service/umi';\n\nimport DashboardCard from './Card.vue';\n\nimport locales from './Highlight.locales.json';\n\ninterface StatusData {\n    status: umi.Status;\n    count: number;\n}\n\n@Options({\n    components: {\n        DashboardCard\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Highlight extends Vue {\n\n    countAll: number = 0;\n    dataset: Array<StatusData> = [];\n\n    get saveID(): number {\n        return this.$store.state.dia.saveID;\n    }\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    open(status?: umi.Status) {\n        const location: RouteLocationRaw = { path: '/list' };\n        if (status) location.query = { status: status.code };\n        this.$router.push(location);\n    }\n\n    private async updateData() {\n        const stats = new Map<umi.StatusCode, StatusData>();\n        for (const status of umi.status.values()) {\n            stats.set(status.code, { status: status, count: 0 });\n        }\n        const nominations = await dia.getAll();\n        for (const nomination of nominations) {\n            const data = stats.get(nomination.status)!;\n            data.count++;\n        }\n        this.countAll = nominations.length;\n        this.dataset = Array.from(stats.values());\n    }\n}\n","import { render } from \"./Highlight.vue?vue&type=template&id=cbe89f24\"\nimport script from \"./Highlight.vue?vue&type=script&lang=ts\"\nexport * from \"./Highlight.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n<h2>{{ $t('header') }}</h2>\n<div class=\"gallery\">\n    <div v-for=\"nomination of nominations\" :key=\"nomination.id\">\n        <material-card :image=\"nomination.imageUrl\" square-image @click=\"open(nomination.id)\">\n            <div class=\"caption\">\n                <material-icon :icon=\"nomination.statusData.icon\" fixed-width/>\n                <span>{{ nomination.title }}</span>\n            </div>\n        </material-card>\n    </div>\n</div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options, Watch } from 'vue-property-decorator';\n\nimport { dia } from '@/service/dia';\nimport Nomination, { Predicator } from '@/service/nomination';\n\nimport MaterialCard from '@/components/material/Card.vue';\nimport MaterialIcon from '@/components/material/Icon.vue';\n\nimport locales from './Gallery.locales.json';\n\n@Options({\n    components: {\n        MaterialCard, MaterialIcon\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Gallery extends Vue {\n\n    private static readonly datePast30Days = Date.now() - (30 * 24 * 3600 * 1000);\n    private static readonly predicator: Predicator = (nomination) => {\n        return nomination.confirmedTime > Gallery.datePast30Days || nomination.resultTime > Gallery.datePast30Days;\n    }\n\n    nominations: Array<Nomination> = [];\n\n    get saveID(): number {\n        return this.$store.state.dia.saveID;\n    }\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    open(id: string) {\n        this.$router.push({\n            path: '/details',\n            query: { id: id }\n        });\n    }\n\n    private async updateData() {\n        const raws = await dia.getAll(Gallery.predicator);\n        this.nominations = raws.map(raws => Nomination.from(raws)).sort(Nomination.comparatorByTime);\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use \"~@material/shape\";\n@use '~@material/typography';\n\n.gallery {\n    display: flex;\n    flex-flow: row nowrap;\n    margin-left: -1rem;\n    margin-right: -1rem;\n    overflow: auto;\n\n    > div {\n        padding-inline-start: 0.6rem;\n\n        &:first-child {\n            padding-inline-start: 1rem;\n        }\n\n        &:last-child {\n            padding-inline-end: 1rem;\n        }\n\n        > .mdc-card {\n        min-width: 6rem;\n        width: 6rem;\n\n        .caption {\n            @include typography.typography(caption);\n            @include typography.overflow-ellipsis;\n\n            margin: 0.4em;\n\n            > i {\n                margin-inline-end: 0.2em;\n            }\n        }\n    }\n    }\n}\n</style>","\nimport { Vue, Options, Watch } from 'vue-property-decorator';\n\nimport { dia } from '@/service/dia';\nimport Nomination, { Predicator } from '@/service/nomination';\n\nimport MaterialCard from '@/components/material/Card.vue';\nimport MaterialIcon from '@/components/material/Icon.vue';\n\nimport locales from './Gallery.locales.json';\n\n@Options({\n    components: {\n        MaterialCard, MaterialIcon\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Gallery extends Vue {\n\n    private static readonly datePast30Days = Date.now() - (30 * 24 * 3600 * 1000);\n    private static readonly predicator: Predicator = (nomination) => {\n        return nomination.confirmedTime > Gallery.datePast30Days || nomination.resultTime > Gallery.datePast30Days;\n    }\n\n    nominations: Array<Nomination> = [];\n\n    get saveID(): number {\n        return this.$store.state.dia.saveID;\n    }\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    open(id: string) {\n        this.$router.push({\n            path: '/details',\n            query: { id: id }\n        });\n    }\n\n    private async updateData() {\n        const raws = await dia.getAll(Gallery.predicator);\n        this.nominations = raws.map(raws => Nomination.from(raws)).sort(Nomination.comparatorByTime);\n    }\n}\n","import { render } from \"./Gallery.vue?vue&type=template&id=7cb50203\"\nimport script from \"./Gallery.vue?vue&type=script&lang=ts\"\nexport * from \"./Gallery.vue?vue&type=script&lang=ts\"\n\nimport \"./Gallery.vue?vue&type=style&index=0&id=7cb50203&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n<h2>{{ $t('header') }}</h2>\n<div class=\"card-grid\">\n    <dashboard-card\n        v-for=\"data of dataset\" :key=\"data.scanner.code\"\n        :title=\"data.scanner.title\" icon=\"mobile-alt\" :count=\"data.count\"\n        @click=\"open(data.scanner)\"\n    />\n</div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options, Watch } from 'vue-property-decorator';\n\nimport { dia } from '@/service/dia';\nimport { umi } from '@/service/umi';\n\nimport DashboardCard from './Card.vue';\n\nimport locales from './Scanners.locales.json';\n\ninterface ScannerData {\n    scanner: umi.Scanner;\n    count: number;\n}\n\n@Options({\n    components: {\n        DashboardCard\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Scanners extends Vue {\n\n    dataset: Array<ScannerData> = [];\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    open(scanner: umi.Scanner) {\n        this.$router.push({\n            path: '/list',\n            query: { scanner: scanner.code }\n        });\n    }\n\n    private async updateData() {\n        const stats = new Map<umi.ScannerCode, ScannerData>();\n        for (const scanner of umi.scanner.values()) {\n            if (scanner.code === umi.ScannerCode.Unknown) continue;\n            stats.set(scanner.code, { scanner: scanner, count: 0 });\n        }\n        const nominations = await dia.getAll();\n        for (const nomination of nominations) {\n            if (nomination.scanner === umi.ScannerCode.Unknown) continue;\n            const data = stats.get(nomination.scanner)!;\n            data.count++;\n        }\n        this.dataset = Array.from(stats.values())\n            .filter(data => data.count > 0)\n            .sort((a, b) => a.scanner.code > b.scanner.code ? 1 : -1);\n    }\n}\n</script>\n\n<style lang=\"scss\">\n\n</style>","\nimport { Vue, Options, Watch } from 'vue-property-decorator';\n\nimport { dia } from '@/service/dia';\nimport { umi } from '@/service/umi';\n\nimport DashboardCard from './Card.vue';\n\nimport locales from './Scanners.locales.json';\n\ninterface ScannerData {\n    scanner: umi.Scanner;\n    count: number;\n}\n\n@Options({\n    components: {\n        DashboardCard\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Scanners extends Vue {\n\n    dataset: Array<ScannerData> = [];\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    open(scanner: umi.Scanner) {\n        this.$router.push({\n            path: '/list',\n            query: { scanner: scanner.code }\n        });\n    }\n\n    private async updateData() {\n        const stats = new Map<umi.ScannerCode, ScannerData>();\n        for (const scanner of umi.scanner.values()) {\n            if (scanner.code === umi.ScannerCode.Unknown) continue;\n            stats.set(scanner.code, { scanner: scanner, count: 0 });\n        }\n        const nominations = await dia.getAll();\n        for (const nomination of nominations) {\n            if (nomination.scanner === umi.ScannerCode.Unknown) continue;\n            const data = stats.get(nomination.scanner)!;\n            data.count++;\n        }\n        this.dataset = Array.from(stats.values())\n            .filter(data => data.count > 0)\n            .sort((a, b) => a.scanner.code > b.scanner.code ? 1 : -1);\n    }\n}\n","import { render } from \"./Scanners.vue?vue&type=template&id=4672de86\"\nimport script from \"./Scanners.vue?vue&type=script&lang=ts\"\nexport * from \"./Scanners.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n<h2 class=\"title-with-action\">\n    <span>{{ $t('header') }}</span>\n    <div class=\"spacer\"/>\n    <material-button @click=\"toggleMore\">{{ $t(more ? 'less' : 'more') }}</material-button>\n</h2>\n<div class=\"card-grid\">\n    <dashboard-card\n        v-for=\"data of dataset\" :key=\"data.reason.code\"\n        :title=\"data.reason.title\" :icon=\"data.reason.icon\" :count=\"data.count\"\n        @click=\"open(data.reason)\"\n    />\n</div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options, Watch } from 'vue-property-decorator';\n\nimport { dia } from '@/service/dia';\nimport { umi } from '@/service/umi';\n\nimport MaterialButton from '@/components/material/Button.vue';\nimport DashboardCard from './Card.vue';\n\nimport locales from './Reasons.locales.json';\n\ninterface ReasonData {\n    reason: umi.Reason;\n    count: number;\n}\n\n@Options({\n    components: {\n        MaterialButton,\n        DashboardCard\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Reasons extends Vue {\n\n    more: boolean = false;\n    private datasetAll: Array<ReasonData> = [];\n\n    get saveID(): number {\n        return this.$store.state.dia.saveID;\n    }\n\n    get dataset(): Array<ReasonData> {\n        return this.more ? this.datasetAll : this.datasetAll.slice(0, 4);\n    }\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    toggleMore() {\n        this.more = !this.more;\n    }\n\n    open(reason: umi.Scanner) {\n        this.$router.push({\n            path: '/list',\n            query: { reason: reason.code }\n        });\n    }\n\n    private async updateData() {\n        const stats = new Map<umi.ScannerCode, ReasonData>();\n        const nominations = await dia.getAll(umi.status.get(umi.StatusCode.Rejected)!.predicator);\n        for (const reason of umi.reason.values()) {\n            const count = nominations.filter(reason.predicator).length;\n            if (count < 1) continue;\n            stats.set(reason.code, { reason: reason, count: count });\n        }\n        this.datasetAll = Array.from(stats.values());\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.dashboard {\n    > .title-with-action {\n        display: flex;\n        flex-flow: row nowrap;\n        align-items: center;\n\n        > .spacer {\n            flex: 1;\n        }\n    }\n}\n</style>","\nimport { Vue, Options, Watch } from 'vue-property-decorator';\n\nimport { dia } from '@/service/dia';\nimport { umi } from '@/service/umi';\n\nimport MaterialButton from '@/components/material/Button.vue';\nimport DashboardCard from './Card.vue';\n\nimport locales from './Reasons.locales.json';\n\ninterface ReasonData {\n    reason: umi.Reason;\n    count: number;\n}\n\n@Options({\n    components: {\n        MaterialButton,\n        DashboardCard\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Reasons extends Vue {\n\n    more: boolean = false;\n    private datasetAll: Array<ReasonData> = [];\n\n    get saveID(): number {\n        return this.$store.state.dia.saveID;\n    }\n\n    get dataset(): Array<ReasonData> {\n        return this.more ? this.datasetAll : this.datasetAll.slice(0, 4);\n    }\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    toggleMore() {\n        this.more = !this.more;\n    }\n\n    open(reason: umi.Scanner) {\n        this.$router.push({\n            path: '/list',\n            query: { reason: reason.code }\n        });\n    }\n\n    private async updateData() {\n        const stats = new Map<umi.ScannerCode, ReasonData>();\n        const nominations = await dia.getAll(umi.status.get(umi.StatusCode.Rejected)!.predicator);\n        for (const reason of umi.reason.values()) {\n            const count = nominations.filter(reason.predicator).length;\n            if (count < 1) continue;\n            stats.set(reason.code, { reason: reason, count: count });\n        }\n        this.datasetAll = Array.from(stats.values());\n    }\n}\n","import { render } from \"./Reasons.vue?vue&type=template&id=8a3e963c\"\nimport script from \"./Reasons.vue?vue&type=script&lang=ts\"\nexport * from \"./Reasons.vue?vue&type=script&lang=ts\"\n\nimport \"./Reasons.vue?vue&type=style&index=0&id=8a3e963c&lang=scss\"\nscript.render = render\n\nexport default script","\nimport { Vue, Options, Watch } from 'vue-property-decorator';\n\nimport { service } from '@/service';\n\nimport MaterialIconButton from '@/components/material/IconButton.vue';\nimport MaterialTopAppBar from '@/components/material/TopAppBar.vue';\nimport MaterialTopAppBarAdjust from '@/components/material/TopAppBarAdjust.vue';\nimport Status from '@/components/dashboard/Status.vue';\nimport Highlight from '@/components/dashboard/Highlight.vue';\nimport Gallery from '@/components/dashboard/Gallery.vue';\nimport Scanners from '@/components/dashboard/Scanners.vue';\nimport Reasons from '@/components/dashboard/Reasons.vue';\n\nimport locales from './Dashboard.locales.json';\nimport { dia } from '@/service/dia';\n\n@Options({\n    components: {\n        MaterialTopAppBar, MaterialTopAppBarAdjust,\n        MaterialIconButton,\n        Status, Highlight, Gallery, Scanners, Reasons\n    },\n    i18n: {\n        messages: locales\n    }\n})\nexport default class Dashboard extends Vue {\n\n    empty: boolean = true;\n\n    get canRefresh() {\n        return this.$store.state.service.status === service.Status.idle && this.$store.state.google.authed;\n    }\n\n    get saveID(): number {\n        return this.$store.state.dia.saveID;\n    }\n\n    created() {\n        this.updateData();\n    }\n\n    @Watch('saveID')\n    onSaved() {\n        this.updateData();\n    }\n\n    refresh() {\n        service.refresh();\n    }\n\n    openPreference() {\n        this.$router.push({ path: '/preferences' });\n    }\n\n    private async updateData() {\n        const count = await dia.count();\n        this.empty = count < 1;\n    }\n}\n","import { render } from \"./Dashboard.vue?vue&type=template&id=3d652272\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=ts\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=ts\"\n\nimport \"./Dashboard.vue?vue&type=style&index=0&id=3d652272&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n<i :class=\"className\"><material-icon-raw :icon=\"icon\"/></i>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialIconRaw from './IconRaw.vue';\n\n@Options({\n    components: {\n        MaterialIconRaw\n    },\n})\nexport default class MaterialIcon extends Vue {\n\n    @Prop(String) readonly icon!: string;\n    @Prop(Boolean) readonly fixedWidth?: boolean;\n\n    get className(): string {\n        let name = 'fa';\n        if (this.fixedWidth) name += ' fa-fw';\n        return name;\n    }\n}\n</script>\n\n<style lang=\"scss\">\n\n</style>","\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialIconRaw from './IconRaw.vue';\n\n@Options({\n    components: {\n        MaterialIconRaw\n    },\n})\nexport default class MaterialIcon extends Vue {\n\n    @Prop(String) readonly icon!: string;\n    @Prop(Boolean) readonly fixedWidth?: boolean;\n\n    get className(): string {\n        let name = 'fa';\n        if (this.fixedWidth) name += ' fa-fw';\n        return name;\n    }\n}\n","import { render } from \"./Icon.vue?vue&type=template&id=157ab65e\"\nimport script from \"./Icon.vue?vue&type=script&lang=ts\"\nexport * from \"./Icon.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Card.vue?vue&type=style&index=0&id=cb81ee92&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Reasons.vue?vue&type=style&index=0&id=8a3e963c&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Gallery.vue?vue&type=style&index=0&id=7cb50203&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Card.vue?vue&type=style&index=0&id=60c770ed&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Status.vue?vue&type=style&index=0&id=1b8cdaa4&lang=scss\"","<template>\n<div class=\"mdc-card mdc-card--outlined\">\n    <div class=\"mdc-card__primary-action\">\n        <div v-if=\"image\" :class=\"mediaClassName\" :style=\"mediaStyle\"/>\n        <slot/>\n    </div>\n</div>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Prop } from 'vue-property-decorator';\n\nexport default class MaterialCard extends Vue {\n\n    @Prop(String) readonly image?: string;\n    @Prop(Boolean) readonly squareImage?: boolean;\n\n    get mediaClassName(): string {\n        return `mdc-card__media mdc-card__media--${this.squareImage ? 'square' : '16-9'}`;\n    }\n\n    get mediaStyle(): string {\n        if (!this.image) return '';\n        return `background-image: url(\"${this.image}\")`;\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use '~@material/card';\n\n@include card.core-styles;\n</style>","\nimport { Vue, Prop } from 'vue-property-decorator';\n\nexport default class MaterialCard extends Vue {\n\n    @Prop(String) readonly image?: string;\n    @Prop(Boolean) readonly squareImage?: boolean;\n\n    get mediaClassName(): string {\n        return `mdc-card__media mdc-card__media--${this.squareImage ? 'square' : '16-9'}`;\n    }\n\n    get mediaStyle(): string {\n        if (!this.image) return '';\n        return `background-image: url(\"${this.image}\")`;\n    }\n}\n","import { render } from \"./Card.vue?vue&type=template&id=cb81ee92\"\nimport script from \"./Card.vue?vue&type=script&lang=ts\"\nexport * from \"./Card.vue?vue&type=script&lang=ts\"\n\nimport \"./Card.vue?vue&type=style&index=0&id=cb81ee92&lang=scss\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}